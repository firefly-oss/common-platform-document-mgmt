openapi: 3.0.1
info:
  title: common-platform-document-mgmt
  description: Enterprise Content Management Core Application
  contact:
    name: Catalis Development
    email: dev@catalis.com
  version: 1.0.0
servers:
  - url: http://core.catalis.vc/ecm
    description: Development Environment
  - url: /
    description: Local Development Environment
tags:
  - name: Notification Logs
    description: API for managing notification logs
  - name: Reference Types
    description: API for managing reference types
  - name: Signature Statuses
    description: API for managing signature statuses
  - name: Notification Types
    description: API for managing notification types
  - name: Signature Proofs
    description: API for managing signature proofs
  - name: Proof Types
    description: API for managing proof types
  - name: Signature Request Statuses
    description: API for managing signature request statuses
  - name: Signature Requests
    description: API for managing signature requests
  - name: Tags
    description: API for managing tags
  - name: Document Types
    description: API for managing document types
  - name: Files
    description: API for managing file metadata
  - name: Documents
    description: API for managing documents and related resources
  - name: Signature Signers
    description: API for managing signature signers
  - name: Document Statuses
    description: API for managing document statuses
paths:
  /api/v1/tags/{id}:
    get:
      tags:
        - Tags
      summary: Get tag by ID
      description: Retrieves a tag by its unique identifier
      operationId: getTagById
      parameters:
        - name: id
          in: path
          description: Tag ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Tag found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDTO'
        '404':
          description: Tag not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagDTO'
    put:
      tags:
        - Tags
      summary: Update tag
      description: Updates an existing tag
      operationId: updateTag
      parameters:
        - name: id
          in: path
          description: Tag ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagDTO'
        required: true
      responses:
        '200':
          description: Tag updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDTO'
        '400':
          description: Invalid tag data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDTO'
        '404':
          description: Tag not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDTO'
    delete:
      tags:
        - Tags
      summary: Delete tag
      description: Deletes a tag by its ID
      operationId: deleteTag
      parameters:
        - name: id
          in: path
          description: Tag ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Tag deleted successfully
        '404':
          description: Tag not found
        '500':
          description: Internal server error
  /api/v1/signature-statuses/{id}:
    get:
      tags:
        - Signature Statuses
      summary: Get signature status by ID
      description: Retrieves a signature status by its unique identifier
      operationId: getSignatureStatusById
      parameters:
        - name: id
          in: path
          description: Signature status ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Signature status found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureStatusDTO'
        '404':
          description: Signature status not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureStatusDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureStatusDTO'
    put:
      tags:
        - Signature Statuses
      summary: Update signature status
      description: Updates an existing signature status
      operationId: updateSignatureStatus
      parameters:
        - name: id
          in: path
          description: Signature status ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureStatusDTO'
        required: true
      responses:
        '200':
          description: Signature status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureStatusDTO'
        '400':
          description: Invalid signature status data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureStatusDTO'
        '404':
          description: Signature status not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureStatusDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureStatusDTO'
    delete:
      tags:
        - Signature Statuses
      summary: Delete signature status
      description: Deletes a signature status by its ID
      operationId: deleteSignatureStatus
      parameters:
        - name: id
          in: path
          description: Signature status ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Signature status deleted successfully
        '404':
          description: Signature status not found
        '500':
          description: Internal server error
  /api/v1/signature-signers/{id}:
    get:
      tags:
        - Signature Signers
      summary: Get signature signer by ID
      description: Retrieves a signature signer by its unique identifier
      operationId: getSignatureSignerById
      parameters:
        - name: id
          in: path
          description: Signature signer ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Signature signer found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureSignerDTO'
        '404':
          description: Signature signer not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureSignerDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureSignerDTO'
    put:
      tags:
        - Signature Signers
      summary: Update signature signer
      description: Updates an existing signature signer
      operationId: updateSignatureSigner
      parameters:
        - name: id
          in: path
          description: Signature signer ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureSignerDTO'
        required: true
      responses:
        '200':
          description: Signature signer updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureSignerDTO'
        '400':
          description: Invalid signature signer data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureSignerDTO'
        '404':
          description: Signature signer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureSignerDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureSignerDTO'
    delete:
      tags:
        - Signature Signers
      summary: Delete signature signer
      description: Deletes a signature signer by its ID
      operationId: deleteSignatureSigner
      parameters:
        - name: id
          in: path
          description: Signature signer ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Signature signer deleted successfully
        '404':
          description: Signature signer not found
        '500':
          description: Internal server error
  /api/v1/signature-requests/{id}:
    get:
      tags:
        - Signature Requests
      summary: Get signature request by ID
      description: Retrieves a signature request by its unique identifier
      operationId: getSignatureRequestById
      parameters:
        - name: id
          in: path
          description: Signature request ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Signature request found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestDTO'
        '404':
          description: Signature request not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureRequestDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureRequestDTO'
    put:
      tags:
        - Signature Requests
      summary: Update signature request
      description: Updates an existing signature request
      operationId: updateSignatureRequest
      parameters:
        - name: id
          in: path
          description: Signature request ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequestDTO'
        required: true
      responses:
        '200':
          description: Signature request updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestDTO'
        '400':
          description: Invalid signature request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestDTO'
        '404':
          description: Signature request not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestDTO'
    delete:
      tags:
        - Signature Requests
      summary: Delete signature request
      description: Deletes a signature request by its ID
      operationId: deleteSignatureRequest
      parameters:
        - name: id
          in: path
          description: Signature request ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Signature request deleted successfully
        '404':
          description: Signature request not found
        '500':
          description: Internal server error
  /api/v1/signature-request-statuses/{id}:
    get:
      tags:
        - Signature Request Statuses
      summary: Get signature request status by ID
      description: Retrieves a signature request status by its unique identifier
      operationId: getSignatureRequestStatusById
      parameters:
        - name: id
          in: path
          description: Signature request status ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Signature request status found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestStatusDTO'
        '404':
          description: Signature request status not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureRequestStatusDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureRequestStatusDTO'
    put:
      tags:
        - Signature Request Statuses
      summary: Update signature request status
      description: Updates an existing signature request status
      operationId: updateSignatureRequestStatus
      parameters:
        - name: id
          in: path
          description: Signature request status ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequestStatusDTO'
        required: true
      responses:
        '200':
          description: Signature request status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestStatusDTO'
        '400':
          description: Invalid signature request status data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestStatusDTO'
        '404':
          description: Signature request status not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestStatusDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestStatusDTO'
    delete:
      tags:
        - Signature Request Statuses
      summary: Delete signature request status
      description: Deletes a signature request status by its ID
      operationId: deleteSignatureRequestStatus
      parameters:
        - name: id
          in: path
          description: Signature request status ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Signature request status deleted successfully
        '404':
          description: Signature request status not found
        '500':
          description: Internal server error
  /api/v1/signature-proofs/{id}:
    get:
      tags:
        - Signature Proofs
      summary: Get signature proof by ID
      description: Retrieves a signature proof by its unique identifier
      operationId: getSignatureProofById
      parameters:
        - name: id
          in: path
          description: Signature proof ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Signature proof found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureProofDTO'
        '404':
          description: Signature proof not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureProofDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureProofDTO'
    put:
      tags:
        - Signature Proofs
      summary: Update signature proof
      description: Updates an existing signature proof
      operationId: updateSignatureProof
      parameters:
        - name: id
          in: path
          description: Signature proof ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureProofDTO'
        required: true
      responses:
        '200':
          description: Signature proof updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureProofDTO'
        '400':
          description: Invalid signature proof data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureProofDTO'
        '404':
          description: Signature proof not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureProofDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureProofDTO'
    delete:
      tags:
        - Signature Proofs
      summary: Delete signature proof
      description: Deletes a signature proof by its ID
      operationId: deleteSignatureProof
      parameters:
        - name: id
          in: path
          description: Signature proof ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Signature proof deleted successfully
        '404':
          description: Signature proof not found
        '500':
          description: Internal server error
  /api/v1/reference-types/{id}:
    get:
      tags:
        - Reference Types
      summary: Get reference type by ID
      description: Retrieves a reference type by its unique identifier
      operationId: getReferenceTypeById
      parameters:
        - name: id
          in: path
          description: Reference type ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Reference type found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTypeDTO'
        '404':
          description: Reference type not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReferenceTypeDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReferenceTypeDTO'
    put:
      tags:
        - Reference Types
      summary: Update reference type
      description: Updates an existing reference type
      operationId: updateReferenceType
      parameters:
        - name: id
          in: path
          description: Reference type ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferenceTypeDTO'
        required: true
      responses:
        '200':
          description: Reference type updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTypeDTO'
        '400':
          description: Invalid reference type data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTypeDTO'
        '404':
          description: Reference type not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTypeDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTypeDTO'
    delete:
      tags:
        - Reference Types
      summary: Delete reference type
      description: Deletes a reference type by its ID
      operationId: deleteReferenceType
      parameters:
        - name: id
          in: path
          description: Reference type ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Reference type deleted successfully
        '404':
          description: Reference type not found
        '500':
          description: Internal server error
  /api/v1/proof-types/{id}:
    get:
      tags:
        - Proof Types
      summary: Get proof type by ID
      description: Retrieves a proof type by its unique identifier
      operationId: getProofTypeById
      parameters:
        - name: id
          in: path
          description: Proof type ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Proof type found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProofTypeDTO'
        '404':
          description: Proof type not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProofTypeDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProofTypeDTO'
    put:
      tags:
        - Proof Types
      summary: Update proof type
      description: Updates an existing proof type
      operationId: updateProofType
      parameters:
        - name: id
          in: path
          description: Proof type ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProofTypeDTO'
        required: true
      responses:
        '200':
          description: Proof type updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProofTypeDTO'
        '400':
          description: Invalid proof type data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProofTypeDTO'
        '404':
          description: Proof type not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProofTypeDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProofTypeDTO'
    delete:
      tags:
        - Proof Types
      summary: Delete proof type
      description: Deletes a proof type by its ID
      operationId: deleteProofType
      parameters:
        - name: id
          in: path
          description: Proof type ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Proof type deleted successfully
        '404':
          description: Proof type not found
        '500':
          description: Internal server error
  /api/v1/notification-types/{id}:
    get:
      tags:
        - Notification Types
      summary: Get notification type by ID
      description: Retrieves a notification type by its unique identifier
      operationId: getNotificationTypeById
      parameters:
        - name: id
          in: path
          description: Notification type ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Notification type found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTypeDTO'
        '404':
          description: Notification type not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationTypeDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationTypeDTO'
    put:
      tags:
        - Notification Types
      summary: Update notification type
      description: Updates an existing notification type
      operationId: updateNotificationType
      parameters:
        - name: id
          in: path
          description: Notification type ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationTypeDTO'
        required: true
      responses:
        '200':
          description: Notification type updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTypeDTO'
        '400':
          description: Invalid notification type data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTypeDTO'
        '404':
          description: Notification type not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTypeDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTypeDTO'
    delete:
      tags:
        - Notification Types
      summary: Delete notification type
      description: Deletes a notification type by its ID
      operationId: deleteNotificationType
      parameters:
        - name: id
          in: path
          description: Notification type ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Notification type deleted successfully
        '404':
          description: Notification type not found
        '500':
          description: Internal server error
  /api/v1/notification-logs/{id}:
    get:
      tags:
        - Notification Logs
      summary: Get notification log by ID
      description: Retrieves a notification log by its unique identifier
      operationId: getNotificationLogById
      parameters:
        - name: id
          in: path
          description: Notification log ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Notification log found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationLogDTO'
        '404':
          description: Notification log not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationLogDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationLogDTO'
    put:
      tags:
        - Notification Logs
      summary: Update notification log
      description: Updates an existing notification log
      operationId: updateNotificationLog
      parameters:
        - name: id
          in: path
          description: Notification log ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationLogDTO'
        required: true
      responses:
        '200':
          description: Notification log updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationLogDTO'
        '400':
          description: Invalid notification log data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationLogDTO'
        '404':
          description: Notification log not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationLogDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationLogDTO'
    delete:
      tags:
        - Notification Logs
      summary: Delete notification log
      description: Deletes a notification log by its ID
      operationId: deleteNotificationLog
      parameters:
        - name: id
          in: path
          description: Notification log ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Notification log deleted successfully
        '404':
          description: Notification log not found
        '500':
          description: Internal server error
  /api/v1/files/{id}:
    get:
      tags:
        - Files
      summary: Get file by ID
      description: Retrieves file metadata by its unique identifier
      operationId: getFileById
      parameters:
        - name: id
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: File found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDTO'
        '404':
          description: File not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FileDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FileDTO'
    put:
      tags:
        - Files
      summary: Update file
      description: Updates an existing file metadata entry
      operationId: updateFile
      parameters:
        - name: id
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileDTO'
        required: true
      responses:
        '200':
          description: File updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDTO'
        '400':
          description: Invalid file data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDTO'
        '404':
          description: File not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDTO'
    delete:
      tags:
        - Files
      summary: Delete file
      description: Deletes a file by its ID
      operationId: deleteFile
      parameters:
        - name: id
          in: path
          description: File ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: File deleted successfully
        '404':
          description: File not found
        '500':
          description: Internal server error
  /api/v1/documents/{id}:
    get:
      tags:
        - Documents
      summary: Get document by ID
      description: Retrieves a document by its unique identifier
      operationId: getDocumentById
      parameters:
        - name: id
          in: path
          description: Document ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Document found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDTO'
        '404':
          description: Document not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentDTO'
    put:
      tags:
        - Documents
      summary: Update document
      description: Updates an existing document
      operationId: updateDocument
      parameters:
        - name: id
          in: path
          description: Document ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentDTO'
        required: true
      responses:
        '200':
          description: Document updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDTO'
        '400':
          description: Invalid document data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDTO'
        '404':
          description: Document not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDTO'
    delete:
      tags:
        - Documents
      summary: Delete document
      description: Deletes a document by its ID
      operationId: deleteDocument
      parameters:
        - name: id
          in: path
          description: Document ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Document deleted successfully
        '404':
          description: Document not found
        '500':
          description: Internal server error
  /api/v1/documents/{documentId}/versions/{versionId}:
    get:
      tags:
        - Documents
      summary: Get document version by ID
      description: Retrieves a document version by its unique identifier
      operationId: getDocumentVersionById
      parameters:
        - name: documentId
          in: path
          description: Document ID
          required: true
          schema:
            type: integer
            format: int64
        - name: versionId
          in: path
          description: Version ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Document version found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentVersionDTO'
        '404':
          description: Document version not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentVersionDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentVersionDTO'
    put:
      tags:
        - Documents
      summary: Update document version
      description: Updates an existing document version
      operationId: updateDocumentVersion
      parameters:
        - name: documentId
          in: path
          description: Document ID
          required: true
          schema:
            type: integer
            format: int64
        - name: versionId
          in: path
          description: Version ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentVersionDTO'
        required: true
      responses:
        '200':
          description: Document version updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentVersionDTO'
        '400':
          description: Invalid document version data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentVersionDTO'
        '404':
          description: Document version not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentVersionDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentVersionDTO'
    delete:
      tags:
        - Documents
      summary: Delete document version
      description: Deletes a document version by its ID
      operationId: deleteDocumentVersion
      parameters:
        - name: documentId
          in: path
          description: Document ID
          required: true
          schema:
            type: integer
            format: int64
        - name: versionId
          in: path
          description: Version ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Document version deleted successfully
        '404':
          description: Document version not found
        '500':
          description: Internal server error
  /api/v1/documents/{documentId}/references/{referenceId}:
    get:
      tags:
        - Documents
      summary: Get document reference by ID
      description: Retrieves a document reference by its unique identifier
      operationId: getDocumentReferenceById
      parameters:
        - name: documentId
          in: path
          description: Document ID
          required: true
          schema:
            type: integer
            format: int64
        - name: referenceId
          in: path
          description: Reference ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Document reference found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentReferenceDTO'
        '404':
          description: Document reference not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentReferenceDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentReferenceDTO'
    put:
      tags:
        - Documents
      summary: Update document reference
      description: Updates an existing document reference
      operationId: updateDocumentReference
      parameters:
        - name: documentId
          in: path
          description: Document ID
          required: true
          schema:
            type: integer
            format: int64
        - name: referenceId
          in: path
          description: Reference ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentReferenceDTO'
        required: true
      responses:
        '200':
          description: Document reference updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentReferenceDTO'
        '400':
          description: Invalid document reference data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentReferenceDTO'
        '404':
          description: Document reference not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentReferenceDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentReferenceDTO'
    delete:
      tags:
        - Documents
      summary: Delete document reference
      description: Deletes a document reference by its ID
      operationId: deleteDocumentReference
      parameters:
        - name: documentId
          in: path
          description: Document ID
          required: true
          schema:
            type: integer
            format: int64
        - name: referenceId
          in: path
          description: Reference ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Document reference deleted successfully
        '404':
          description: Document reference not found
        '500':
          description: Internal server error
  /api/v1/document-types/{id}:
    get:
      tags:
        - Document Types
      summary: Get document type by ID
      description: Retrieves a document type by its unique identifier
      operationId: getDocumentTypeById
      parameters:
        - name: id
          in: path
          description: Document type ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Document type found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeDTO'
        '404':
          description: Document type not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentTypeDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentTypeDTO'
    put:
      tags:
        - Document Types
      summary: Update document type
      description: Updates an existing document type
      operationId: updateDocumentType
      parameters:
        - name: id
          in: path
          description: Document type ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentTypeDTO'
        required: true
      responses:
        '200':
          description: Document type updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeDTO'
        '400':
          description: Invalid document type data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeDTO'
        '404':
          description: Document type not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeDTO'
    delete:
      tags:
        - Document Types
      summary: Delete document type
      description: Deletes a document type by its ID
      operationId: deleteDocumentType
      parameters:
        - name: id
          in: path
          description: Document type ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Document type deleted successfully
        '404':
          description: Document type not found
        '500':
          description: Internal server error
  /api/v1/document-statuses/{id}:
    get:
      tags:
        - Document Statuses
      summary: Get document status by ID
      description: Retrieves a document status by its unique identifier
      operationId: getDocumentStatusById
      parameters:
        - name: id
          in: path
          description: Document status ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Document status found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentStatusDTO'
        '404':
          description: Document status not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentStatusDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentStatusDTO'
    put:
      tags:
        - Document Statuses
      summary: Update document status
      description: Updates an existing document status
      operationId: updateDocumentStatus
      parameters:
        - name: id
          in: path
          description: Document status ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentStatusDTO'
        required: true
      responses:
        '200':
          description: Document status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentStatusDTO'
        '400':
          description: Invalid document status data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentStatusDTO'
        '404':
          description: Document status not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentStatusDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentStatusDTO'
    delete:
      tags:
        - Document Statuses
      summary: Delete document status
      description: Deletes a document status by its ID
      operationId: deleteDocumentStatus
      parameters:
        - name: id
          in: path
          description: Document status ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Document status deleted successfully
        '404':
          description: Document status not found
        '500':
          description: Internal server error
  /api/v1/tags/filter:
    post:
      tags:
        - Tags
      summary: Filter tags
      description: Filters tags based on provided criteria
      operationId: filterTags
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestTagDTO'
        required: true
      responses:
        '200':
          description: Tags filtered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseTagDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseTagDTO'
  /api/v1/tags:
    post:
      tags:
        - Tags
      summary: Create tag
      description: Creates a new tag
      operationId: createTag
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagDTO'
        required: true
      responses:
        '201':
          description: Tag created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDTO'
        '400':
          description: Invalid tag data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDTO'
  /api/v1/signature-statuses/filter:
    post:
      tags:
        - Signature Statuses
      summary: Filter signature statuses
      description: Filters signature statuses based on provided criteria
      operationId: filterSignatureStatuses
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestSignatureStatusDTO'
        required: true
      responses:
        '200':
          description: Signature statuses filtered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseSignatureStatusDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseSignatureStatusDTO'
  /api/v1/signature-statuses:
    post:
      tags:
        - Signature Statuses
      summary: Create signature status
      description: Creates a new signature status
      operationId: createSignatureStatus
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureStatusDTO'
        required: true
      responses:
        '201':
          description: Signature status created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureStatusDTO'
        '400':
          description: Invalid signature status data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureStatusDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureStatusDTO'
  /api/v1/signature-signers/filter:
    post:
      tags:
        - Signature Signers
      summary: Filter signature signers
      description: Filters signature signers based on provided criteria
      operationId: filterSignatureSigners
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestSignatureSignerDTO'
        required: true
      responses:
        '200':
          description: Signature signers filtered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseSignatureSignerDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseSignatureSignerDTO'
  /api/v1/signature-signers:
    post:
      tags:
        - Signature Signers
      summary: Create signature signer
      description: Creates a new signature signer
      operationId: createSignatureSigner
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureSignerDTO'
        required: true
      responses:
        '201':
          description: Signature signer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureSignerDTO'
        '400':
          description: Invalid signature signer data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureSignerDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureSignerDTO'
  /api/v1/signature-requests/filter:
    post:
      tags:
        - Signature Requests
      summary: Filter signature requests
      description: Filters signature requests based on provided criteria
      operationId: filterSignatureRequests
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestSignatureRequestDTO'
        required: true
      responses:
        '200':
          description: Signature requests filtered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseSignatureRequestDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseSignatureRequestDTO'
  /api/v1/signature-requests:
    post:
      tags:
        - Signature Requests
      summary: Create signature request
      description: Creates a new signature request
      operationId: createSignatureRequest
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequestDTO'
        required: true
      responses:
        '201':
          description: Signature request created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestDTO'
        '400':
          description: Invalid signature request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestDTO'
  /api/v1/signature-request-statuses/filter:
    post:
      tags:
        - Signature Request Statuses
      summary: Filter signature request statuses
      description: Filters signature request statuses based on provided criteria
      operationId: filterSignatureRequestStatuses
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestSignatureRequestStatusDTO'
        required: true
      responses:
        '200':
          description: Signature request statuses filtered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseSignatureRequestStatusDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseSignatureRequestStatusDTO'
  /api/v1/signature-request-statuses:
    post:
      tags:
        - Signature Request Statuses
      summary: Create signature request status
      description: Creates a new signature request status
      operationId: createSignatureRequestStatus
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequestStatusDTO'
        required: true
      responses:
        '201':
          description: Signature request status created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestStatusDTO'
        '400':
          description: Invalid signature request status data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestStatusDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestStatusDTO'
  /api/v1/signature-proofs/filter:
    post:
      tags:
        - Signature Proofs
      summary: Filter signature proofs
      description: Filters signature proofs based on provided criteria
      operationId: filterSignatureProofs
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestSignatureProofDTO'
        required: true
      responses:
        '200':
          description: Signature proofs filtered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseSignatureProofDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseSignatureProofDTO'
  /api/v1/signature-proofs:
    post:
      tags:
        - Signature Proofs
      summary: Create signature proof
      description: Creates a new signature proof
      operationId: createSignatureProof
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureProofDTO'
        required: true
      responses:
        '201':
          description: Signature proof created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureProofDTO'
        '400':
          description: Invalid signature proof data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureProofDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureProofDTO'
  /api/v1/reference-types/filter:
    post:
      tags:
        - Reference Types
      summary: Filter reference types
      description: Filters reference types based on provided criteria
      operationId: filterReferenceTypes
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestReferenceTypeDTO'
        required: true
      responses:
        '200':
          description: Reference types filtered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseReferenceTypeDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseReferenceTypeDTO'
  /api/v1/reference-types:
    post:
      tags:
        - Reference Types
      summary: Create reference type
      description: Creates a new reference type
      operationId: createReferenceType
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferenceTypeDTO'
        required: true
      responses:
        '201':
          description: Reference type created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTypeDTO'
        '400':
          description: Invalid reference type data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTypeDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceTypeDTO'
  /api/v1/proof-types/filter:
    post:
      tags:
        - Proof Types
      summary: Filter proof types
      description: Filters proof types based on provided criteria
      operationId: filterProofTypes
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestProofTypeDTO'
        required: true
      responses:
        '200':
          description: Proof types filtered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseProofTypeDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseProofTypeDTO'
  /api/v1/proof-types:
    post:
      tags:
        - Proof Types
      summary: Create proof type
      description: Creates a new proof type
      operationId: createProofType
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProofTypeDTO'
        required: true
      responses:
        '201':
          description: Proof type created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProofTypeDTO'
        '400':
          description: Invalid proof type data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProofTypeDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProofTypeDTO'
  /api/v1/notification-types/filter:
    post:
      tags:
        - Notification Types
      summary: Filter notification types
      description: Filters notification types based on provided criteria
      operationId: filterNotificationTypes
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestNotificationTypeDTO'
        required: true
      responses:
        '200':
          description: Notification types filtered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseNotificationTypeDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseNotificationTypeDTO'
  /api/v1/notification-types:
    post:
      tags:
        - Notification Types
      summary: Create notification type
      description: Creates a new notification type
      operationId: createNotificationType
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationTypeDTO'
        required: true
      responses:
        '201':
          description: Notification type created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTypeDTO'
        '400':
          description: Invalid notification type data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTypeDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTypeDTO'
  /api/v1/notification-logs/filter:
    post:
      tags:
        - Notification Logs
      summary: Filter notification logs
      description: Filters notification logs based on provided criteria
      operationId: filterNotificationLogs
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestNotificationLogDTO'
        required: true
      responses:
        '200':
          description: Notification logs filtered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseNotificationLogDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseNotificationLogDTO'
  /api/v1/notification-logs:
    post:
      tags:
        - Notification Logs
      summary: Create notification log
      description: Creates a new notification log
      operationId: createNotificationLog
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationLogDTO'
        required: true
      responses:
        '201':
          description: Notification log created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationLogDTO'
        '400':
          description: Invalid notification log data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationLogDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationLogDTO'
  /api/v1/files/filter:
    post:
      tags:
        - Files
      summary: Filter files
      description: Filters files based on provided criteria
      operationId: filterFiles
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestFileDTO'
        required: true
      responses:
        '200':
          description: Files filtered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseFileDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseFileDTO'
  /api/v1/files:
    post:
      tags:
        - Files
      summary: Create file
      description: Creates a new file metadata entry
      operationId: createFile
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileDTO'
        required: true
      responses:
        '201':
          description: File created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDTO'
        '400':
          description: Invalid file data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDTO'
  /api/v1/documents/{documentId}/versions/filter:
    post:
      tags:
        - Documents
      summary: Filter document versions
      description: Advanced filtering of document versions. Include documentId in filter criteria.
      operationId: filterDocumentVersions
      parameters:
        - name: documentId
          in: path
          description: Document ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestDocumentVersionDTO'
        required: true
      responses:
        '200':
          description: Document versions filtered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentVersionDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentVersionDTO'
  /api/v1/documents/{documentId}/versions:
    get:
      tags:
        - Documents
      summary: Get all document versions
      description: Retrieves all versions of a specific document
      operationId: getDocumentVersions
      parameters:
        - name: documentId
          in: path
          description: Document ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Document versions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: Document not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentVersionDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentVersionDTO'
    post:
      tags:
        - Documents
      summary: Create document version
      description: Creates a new version for a document
      operationId: createDocumentVersion
      parameters:
        - name: documentId
          in: path
          description: Document ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentVersionDTO'
        required: true
      responses:
        '201':
          description: Document version created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentVersionDTO'
        '400':
          description: Invalid document version data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentVersionDTO'
        '404':
          description: Document not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentVersionDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentVersionDTO'
  /api/v1/documents/{documentId}/tags/filter:
    post:
      tags:
        - Documents
      summary: Filter document tags
      description: Advanced filtering of document tags. Include documentId in filter criteria.
      operationId: filterDocumentTags
      parameters:
        - name: documentId
          in: path
          description: Document ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestDocumentTagDTO'
        required: true
      responses:
        '200':
          description: Document tags filtered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentTagDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentTagDTO'
  /api/v1/documents/{documentId}/tags:
    get:
      tags:
        - Documents
      summary: Get all document tags
      description: Retrieves all tags of a specific document
      operationId: getDocumentTags
      parameters:
        - name: documentId
          in: path
          description: Document ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Document tags retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: Document not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentTagDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentTagDTO'
    post:
      tags:
        - Documents
      summary: Create document tag
      description: Associates a tag with a document
      operationId: createDocumentTag
      parameters:
        - name: documentId
          in: path
          description: Document ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentTagDTO'
        required: true
      responses:
        '201':
          description: Document tag created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTagDTO'
        '400':
          description: Invalid document tag data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTagDTO'
        '404':
          description: Document not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTagDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTagDTO'
  /api/v1/documents/{documentId}/references/filter:
    post:
      tags:
        - Documents
      summary: Filter document references
      description: Advanced filtering of document references. Include documentId in filter criteria.
      operationId: filterDocumentReferences
      parameters:
        - name: documentId
          in: path
          description: Document ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestDocumentReferenceDTO'
        required: true
      responses:
        '200':
          description: Document references filtered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentReferenceDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentReferenceDTO'
  /api/v1/documents/{documentId}/references:
    get:
      tags:
        - Documents
      summary: Get all document references
      description: Retrieves all references of a specific document
      operationId: getDocumentReferences
      parameters:
        - name: documentId
          in: path
          description: Document ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Document references retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: Document not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentReferenceDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentReferenceDTO'
    post:
      tags:
        - Documents
      summary: Create document reference
      description: Creates a reference between documents
      operationId: createDocumentReference
      parameters:
        - name: documentId
          in: path
          description: Document ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentReferenceDTO'
        required: true
      responses:
        '201':
          description: Document reference created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentReferenceDTO'
        '400':
          description: Invalid document reference data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentReferenceDTO'
        '404':
          description: Document not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentReferenceDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentReferenceDTO'
  /api/v1/documents/filter:
    post:
      tags:
        - Documents
      summary: Filter documents
      description: Filters documents based on provided criteria
      operationId: filterDocuments
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestDocumentDTO'
        required: true
      responses:
        '200':
          description: Documents filtered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentDTO'
  /api/v1/documents:
    post:
      tags:
        - Documents
      summary: Create document
      description: Creates a new document
      operationId: createDocument
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentDTO'
        required: true
      responses:
        '201':
          description: Document created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDTO'
        '400':
          description: Invalid document data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDTO'
  /api/v1/document-types/filter:
    post:
      tags:
        - Document Types
      summary: Filter document types
      description: Filters document types based on provided criteria
      operationId: filterDocumentTypes
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestDocumentTypeDTO'
        required: true
      responses:
        '200':
          description: Document types filtered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentTypeDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentTypeDTO'
  /api/v1/document-types:
    post:
      tags:
        - Document Types
      summary: Create document type
      description: Creates a new document type
      operationId: createDocumentType
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentTypeDTO'
        required: true
      responses:
        '201':
          description: Document type created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeDTO'
        '400':
          description: Invalid document type data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeDTO'
  /api/v1/document-statuses/filter:
    post:
      tags:
        - Document Statuses
      summary: Filter document statuses
      description: Filters document statuses based on provided criteria
      operationId: filterDocumentStatuses
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestDocumentStatusDTO'
        required: true
      responses:
        '200':
          description: Document statuses filtered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentStatusDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentStatusDTO'
  /api/v1/document-statuses:
    post:
      tags:
        - Document Statuses
      summary: Create document status
      description: Creates a new document status
      operationId: createDocumentStatus
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentStatusDTO'
        required: true
      responses:
        '201':
          description: Document status created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentStatusDTO'
        '400':
          description: Invalid document status data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentStatusDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentStatusDTO'
  /api/v1/documents/{documentId}/tags/{tagId}:
    get:
      tags:
        - Documents
      summary: Get document tag by ID
      description: Retrieves a document tag by its unique identifier
      operationId: getDocumentTagById
      parameters:
        - name: documentId
          in: path
          description: Document ID
          required: true
          schema:
            type: integer
            format: int64
        - name: tagId
          in: path
          description: Tag ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Document tag found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTagDTO'
        '404':
          description: Document tag not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentTagDTO'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentTagDTO'
    delete:
      tags:
        - Documents
      summary: Delete document tag
      description: Removes a tag association from a document
      operationId: deleteDocumentTag
      parameters:
        - name: documentId
          in: path
          description: Document ID
          required: true
          schema:
            type: integer
            format: int64
        - name: tagId
          in: path
          description: Tag ID
          required: true
          schema:
            type: integer
            format: int64
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Document tag deleted successfully
        '404':
          description: Document tag not found
        '500':
          description: Internal server error
components:
  schemas:
    TagDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        color:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateUpdated:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
    SignatureStatusDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        code:
          type: string
        description:
          type: string
    SignatureSignerDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        signatureRequestId:
          type: integer
          format: int64
        signerEmail:
          type: string
        signerName:
          type: string
        signOrder:
          type: integer
          format: int64
        statusId:
          type: integer
          format: int64
        dateCreated:
          type: string
          format: date-time
        dateUpdated:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
    SignatureRequestDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        documentId:
          type: integer
          format: int64
        requestDate:
          type: string
          format: date-time
        statusId:
          type: integer
          format: int64
        signatoryOrder:
          type: integer
          format: int64
        interveningParties:
          type: string
        externalSignatureId:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateUpdated:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
    SignatureRequestStatusDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        code:
          type: string
        description:
          type: string
    SignatureProofDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        signatureRequestId:
          type: integer
          format: int64
        proofUrl:
          type: string
        proofTypeId:
          type: integer
          format: int64
        proofDate:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
        dateUpdated:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
    ReferenceTypeDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        code:
          type: string
        description:
          type: string
    ProofTypeDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        code:
          type: string
        description:
          type: string
    NotificationTypeDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        code:
          type: string
        description:
          type: string
    NotificationLogDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        documentId:
          type: integer
          format: int64
        signatureRequestId:
          type: integer
          format: int64
        notificationTypeId:
          type: integer
          format: int64
        recipient:
          type: string
        message:
          type: string
        sentAt:
          type: string
          format: date-time
        success:
          type: boolean
        externalId:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateUpdated:
          type: string
          format: date-time
    FileDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        documentId:
          type: integer
          format: int64
        fileName:
          type: string
        fileType:
          type: string
        blobStorageUrl:
          type: string
        uploadDate:
          type: string
          format: date-time
        uploadedBy:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateUpdated:
          type: string
          format: date-time
    DocumentDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        creationDate:
          type: string
          format: date-time
        ownerDepartment:
          type: string
        statusId:
          type: integer
          format: int64
        documentTypeId:
          type: integer
          format: int64
        dateCreated:
          type: string
          format: date-time
        dateUpdated:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
    DocumentVersionDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        documentId:
          type: integer
          format: int64
        versionNumber:
          type: integer
          format: int64
        changeSummary:
          type: string
        fileName:
          type: string
        blobStorageUrl:
          type: string
        effectiveDate:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
        dateUpdated:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
    DocumentReferenceDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        documentId:
          type: integer
          format: int64
        relatedDocumentId:
          type: integer
          format: int64
        referenceTypeId:
          type: integer
          format: int64
        note:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateUpdated:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
    DocumentTypeDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        code:
          type: string
        description:
          type: string
    DocumentStatusDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        code:
          type: string
        description:
          type: string
    FilterOptions:
      type: object
      properties:
        caseInsensitiveStrings:
          type: boolean
        includeInheritedFields:
          type: boolean
      description: Filter options for customizing filter behavior
    FilterRequestTagDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/TagDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria
    PaginationRequest:
      type: object
      properties:
        pageNumber:
          type: integer
          description: The zero-based page number to retrieve.
          format: int32
          example: 0
          default: 0
        pageSize:
          type: integer
          description: The number of items per page.
          format: int32
          example: 10
          default: 10
        sortBy:
          type: string
          description: The field to sort the results by.
          example: name
        sortDirection:
          type: string
          description: The direction of sorting, either ASC or DESC.
          example: DESC
          default: DESC
      description: Represents a pagination request for retrieving paginated results, including page number, size, sort field, and direction.
    RangeFilter:
      type: object
      properties:
        ranges:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RangeObject'
          description: Map of field names to their range criteria
      description: Represents range filters for numeric fields
    RangeObject:
      type: object
      properties:
        from:
          type: object
          description: Start value of the range
        to:
          type: object
          description: End value of the range
      description: Represents a range with from and to values
    PaginationResponse:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            type: object
            description: The list of items for the current page.
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseTagDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/TagDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestSignatureStatusDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/SignatureStatusDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria
    PaginationResponseSignatureStatusDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/SignatureStatusDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestSignatureSignerDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/SignatureSignerDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria
    PaginationResponseSignatureSignerDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/SignatureSignerDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestSignatureRequestDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/SignatureRequestDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria
    PaginationResponseSignatureRequestDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/SignatureRequestDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestSignatureRequestStatusDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/SignatureRequestStatusDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria
    PaginationResponseSignatureRequestStatusDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/SignatureRequestStatusDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestSignatureProofDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/SignatureProofDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria
    PaginationResponseSignatureProofDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/SignatureProofDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestReferenceTypeDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/ReferenceTypeDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria
    PaginationResponseReferenceTypeDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/ReferenceTypeDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestProofTypeDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/ProofTypeDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria
    PaginationResponseProofTypeDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/ProofTypeDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestNotificationTypeDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/NotificationTypeDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria
    PaginationResponseNotificationTypeDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/NotificationTypeDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestNotificationLogDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/NotificationLogDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria
    PaginationResponseNotificationLogDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/NotificationLogDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestFileDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/FileDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria
    PaginationResponseFileDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/FileDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestDocumentVersionDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/DocumentVersionDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria. Include documentId in filter criteria.
    PaginationResponseDocumentVersionDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/DocumentVersionDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    DocumentTagDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        documentId:
          type: integer
          format: int64
        tagId:
          type: integer
          format: int64
        dateCreated:
          type: string
          format: date-time
        dateUpdated:
          type: string
          format: date-time
    FilterRequestDocumentTagDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/DocumentTagDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria. Include documentId in filter criteria.
    PaginationResponseDocumentTagDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/DocumentTagDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestDocumentReferenceDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/DocumentReferenceDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria. Include documentId in filter criteria.
    PaginationResponseDocumentReferenceDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/DocumentReferenceDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestDocumentDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/DocumentDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria
    PaginationResponseDocumentDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/DocumentDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestDocumentTypeDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/DocumentTypeDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria
    PaginationResponseDocumentTypeDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/DocumentTypeDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestDocumentStatusDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/DocumentStatusDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria
    PaginationResponseDocumentStatusDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/DocumentStatusDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
