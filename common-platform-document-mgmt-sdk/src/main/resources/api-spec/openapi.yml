openapi: 3.0.1
info:
  title: common-platform-document-mgmt
  description: Enterprise Content Management Core Application
  contact:
    name: Firefly Software Solutions Inc
    email: dev@getfirefly.io
  version: 1.0.0
servers:
  - url: https://api.getfirefly.io/ecm
    description: Production Environment
  - url: /
    description: Local Development Environment
tags:
  - name: Document Metadata Controller
    description: API for managing document metadata
  - name: Document Version Controller
    description: API for managing document versions
  - name: Signature Request Controller
    description: API for managing signature requests
  - name: Document Signature Controller
    description: API for managing document signatures
  - name: Document Tag Controller
    description: API for managing document tags
  - name: Signature Verification Controller
    description: API for managing signature verifications
  - name: Tag Controller
    description: API for managing tags
  - name: Document Controller
    description: API for managing documents
  - name: Signature Provider Controller
    description: API for managing signature providers
  - name: Folder Controller
    description: API for managing folders
  - name: Document Permission Controller
    description: API for managing document permissions
paths:
  /api/v1/tags/{id}:
    get:
      tags:
        - Tag Controller
      summary: Get tag by ID
      description: Returns a tag by its ID
      operationId: getTagById
      parameters:
        - name: id
          in: path
          description: ID of the tag to retrieve
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved tag
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagDTO'
        '404':
          description: Tag not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagDTO'
    put:
      tags:
        - Tag Controller
      summary: Update an existing tag
      description: Updates an existing tag by its ID
      operationId: updateTag
      parameters:
        - name: id
          in: path
          description: ID of the tag to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagDTO'
        required: true
      responses:
        '200':
          description: Tag updated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagDTO'
        '400':
          description: Invalid tag data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagDTO'
        '404':
          description: Tag not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagDTO'
    delete:
      tags:
        - Tag Controller
      summary: Delete a tag
      description: Deletes a tag by its ID
      operationId: deleteTag
      parameters:
        - name: id
          in: path
          description: ID of the tag to delete
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Tag deleted successfully
        '404':
          description: Tag not found
  /api/v1/signature-verifications/{id}:
    get:
      tags:
        - Signature Verification Controller
      summary: Get signature verification by ID
      description: Returns a signature verification by its ID
      operationId: getSignatureVerificationById
      parameters:
        - name: id
          in: path
          description: ID of the signature verification to retrieve
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved signature verification
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureVerificationDTO'
        '404':
          description: Signature verification not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureVerificationDTO'
    put:
      tags:
        - Signature Verification Controller
      summary: Update an existing signature verification
      description: Updates an existing signature verification by its ID
      operationId: updateSignatureVerification
      parameters:
        - name: id
          in: path
          description: ID of the signature verification to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureVerificationDTO'
        required: true
      responses:
        '200':
          description: Signature verification updated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureVerificationDTO'
        '400':
          description: Invalid signature verification data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureVerificationDTO'
        '404':
          description: Signature verification not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureVerificationDTO'
    delete:
      tags:
        - Signature Verification Controller
      summary: Delete a signature verification
      description: Deletes a signature verification by its ID
      operationId: deleteSignatureVerification
      parameters:
        - name: id
          in: path
          description: ID of the signature verification to delete
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Signature verification deleted successfully
        '404':
          description: Signature verification not found
  /api/v1/signature-requests/{id}:
    get:
      tags:
        - Signature Request Controller
      summary: Get signature request by ID
      description: Returns a signature request by its ID
      operationId: getSignatureRequestById
      parameters:
        - name: id
          in: path
          description: ID of the signature request to retrieve
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved signature request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureRequestDTO'
        '404':
          description: Signature request not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureRequestDTO'
    put:
      tags:
        - Signature Request Controller
      summary: Update an existing signature request
      description: Updates an existing signature request by its ID
      operationId: updateSignatureRequest
      parameters:
        - name: id
          in: path
          description: ID of the signature request to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequestDTO'
        required: true
      responses:
        '200':
          description: Signature request updated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureRequestDTO'
        '400':
          description: Invalid signature request data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureRequestDTO'
        '404':
          description: Signature request not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureRequestDTO'
    delete:
      tags:
        - Signature Request Controller
      summary: Delete a signature request
      description: Deletes a signature request by its ID
      operationId: deleteSignatureRequest
      parameters:
        - name: id
          in: path
          description: ID of the signature request to delete
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Signature request deleted successfully
        '404':
          description: Signature request not found
  /api/v1/signature-providers/{id}:
    get:
      tags:
        - Signature Provider Controller
      summary: Get signature provider by ID
      description: Returns a signature provider by its ID
      operationId: getSignatureProviderById
      parameters:
        - name: id
          in: path
          description: ID of the signature provider to retrieve
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved signature provider
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureProviderDTO'
        '404':
          description: Signature provider not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureProviderDTO'
    put:
      tags:
        - Signature Provider Controller
      summary: Update an existing signature provider
      description: Updates an existing signature provider by its ID
      operationId: updateSignatureProvider
      parameters:
        - name: id
          in: path
          description: ID of the signature provider to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureProviderDTO'
        required: true
      responses:
        '200':
          description: Signature provider updated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureProviderDTO'
        '400':
          description: Invalid signature provider data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureProviderDTO'
        '404':
          description: Signature provider not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureProviderDTO'
    delete:
      tags:
        - Signature Provider Controller
      summary: Delete a signature provider
      description: Deletes a signature provider by its ID
      operationId: deleteSignatureProvider
      parameters:
        - name: id
          in: path
          description: ID of the signature provider to delete
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Signature provider deleted successfully
        '404':
          description: Signature provider not found
  /api/v1/folders/{id}:
    get:
      tags:
        - Folder Controller
      summary: Get folder by ID
      description: Returns a folder by its ID
      operationId: getFolderById
      parameters:
        - name: id
          in: path
          description: ID of the folder to retrieve
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved folder
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FolderDTO'
        '404':
          description: Folder not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FolderDTO'
    put:
      tags:
        - Folder Controller
      summary: Update an existing folder
      description: Updates an existing folder by its ID
      operationId: updateFolder
      parameters:
        - name: id
          in: path
          description: ID of the folder to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderDTO'
        required: true
      responses:
        '200':
          description: Folder updated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FolderDTO'
        '400':
          description: Invalid folder data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FolderDTO'
        '404':
          description: Folder not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FolderDTO'
    delete:
      tags:
        - Folder Controller
      summary: Delete a folder
      description: Deletes a folder by its ID
      operationId: deleteFolder
      parameters:
        - name: id
          in: path
          description: ID of the folder to delete
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Folder deleted successfully
        '404':
          description: Folder not found
  /api/v1/documents/{id}:
    get:
      tags:
        - Document Controller
      summary: Get document by ID
      description: Returns a document by its ID
      operationId: getDocumentById
      parameters:
        - name: id
          in: path
          description: ID of the document to retrieve
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved document
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentDTO'
        '404':
          description: Document not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentDTO'
    put:
      tags:
        - Document Controller
      summary: Update an existing document
      description: Updates an existing document by its ID
      operationId: updateDocument
      parameters:
        - name: id
          in: path
          description: ID of the document to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentDTO'
        required: true
      responses:
        '200':
          description: Document updated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentDTO'
        '400':
          description: Invalid document data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentDTO'
        '404':
          description: Document not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentDTO'
    delete:
      tags:
        - Document Controller
      summary: Delete a document
      description: Deletes a document by its ID
      operationId: deleteDocument
      parameters:
        - name: id
          in: path
          description: ID of the document to delete
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Document deleted successfully
        '404':
          description: Document not found
  /api/v1/documents/{documentId}/signatures/{id}:
    get:
      tags:
        - Document Signature Controller
      summary: Get specific signature
      description: Returns a specific signature for a document
      operationId: getDocumentSignature
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: id
          in: path
          description: ID of the signature to retrieve
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved document signature
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentSignatureDTO'
        '404':
          description: Document signature not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentSignatureDTO'
    put:
      tags:
        - Document Signature Controller
      summary: Update a document signature
      description: Updates an existing signature for a document
      operationId: updateDocumentSignature
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: id
          in: path
          description: ID of the signature to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSignatureDTO'
        required: true
      responses:
        '200':
          description: Document signature updated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentSignatureDTO'
        '400':
          description: Invalid document signature data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentSignatureDTO'
        '404':
          description: Document signature not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentSignatureDTO'
    delete:
      tags:
        - Document Signature Controller
      summary: Remove a signature from a document
      description: Deletes a signature from a document
      operationId: deleteDocumentSignature
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: id
          in: path
          description: ID of the signature to delete
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Document signature deleted successfully
        '404':
          description: Document signature not found
  /api/v1/documents/{documentId}/permissions/{id}:
    get:
      tags:
        - Document Permission Controller
      summary: Get specific permission
      description: Returns a specific permission for a document
      operationId: getDocumentPermission
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: id
          in: path
          description: ID of the permission to retrieve
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved document permission
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentPermissionDTO'
        '404':
          description: Document permission not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentPermissionDTO'
    put:
      tags:
        - Document Permission Controller
      summary: Update a document permission
      description: Updates an existing permission for a document
      operationId: updateDocumentPermission
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: id
          in: path
          description: ID of the permission to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentPermissionDTO'
        required: true
      responses:
        '200':
          description: Document permission updated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentPermissionDTO'
        '400':
          description: Invalid document permission data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentPermissionDTO'
        '404':
          description: Document permission not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentPermissionDTO'
    delete:
      tags:
        - Document Permission Controller
      summary: Remove a permission from a document
      description: Deletes a permission from a document
      operationId: deleteDocumentPermission
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: id
          in: path
          description: ID of the permission to delete
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Document permission deleted successfully
        '404':
          description: Document permission not found
  /api/v1/documents/{documentId}/metadata/{key}:
    get:
      tags:
        - Document Metadata Controller
      summary: Get specific metadata by key
      description: Returns specific metadata for a document by key
      operationId: getMetadataByKey
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: key
          in: path
          description: Key of the metadata to retrieve
          required: true
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved document metadata
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentMetadataDTO'
        '404':
          description: Document metadata not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentMetadataDTO'
    put:
      tags:
        - Document Metadata Controller
      summary: Update document metadata
      description: Updates existing metadata for a document
      operationId: updateMetadata
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: key
          in: path
          description: Key of the metadata to update
          required: true
          schema:
            type: string
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentMetadataDTO'
        required: true
      responses:
        '200':
          description: Document metadata updated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentMetadataDTO'
        '400':
          description: Invalid document metadata data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentMetadataDTO'
        '404':
          description: Document metadata not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentMetadataDTO'
    delete:
      tags:
        - Document Metadata Controller
      summary: Delete document metadata
      description: Deletes metadata from a document
      operationId: deleteMetadata
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: key
          in: path
          description: Key of the metadata to delete
          required: true
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Document metadata deleted successfully
        '404':
          description: Document metadata not found
  /api/v1/tags:
    get:
      tags:
        - Tag Controller
      summary: List all tags
      description: Returns a paginated list of tags with optional filtering
      operationId: listTags
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.name
          in: query
          description: Exact filter for name
          required: false
          schema:
            type: string
        - name: filters.description
          in: query
          description: Exact filter for description
          required: false
          schema:
            type: string
        - name: filters.color
          in: query
          description: Exact filter for color
          required: false
          schema:
            type: string
        - name: filters.isSystemTag
          in: query
          description: Exact filter for is system tag
          required: false
          schema:
            type: boolean
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.createdBy
          in: query
          description: Exact filter for created by
          required: false
          schema:
            type: string
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedBy
          in: query
          description: Exact filter for updated by
          required: false
          schema:
            type: string
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved tags
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponse'
    post:
      tags:
        - Tag Controller
      summary: Create a new tag
      description: Creates a new tag
      operationId: createTag
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagDTO'
        required: true
      responses:
        '201':
          description: Tag created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagDTO'
        '400':
          description: Invalid tag data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagDTO'
  /api/v1/signature-verifications:
    get:
      tags:
        - Signature Verification Controller
      summary: List all signature verifications
      description: Returns a paginated list of signature verifications with optional filtering
      operationId: listSignatureVerifications
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.verificationStatus
          in: query
          description: Exact filter for verification status
          required: false
          schema:
            type: string
            enum:
              - VALID
              - INVALID
              - INDETERMINATE
              - IN_PROGRESS
              - FAILED
              - NOT_VERIFIED
        - name: filters.verificationDetails
          in: query
          description: Exact filter for verification details
          required: false
          schema:
            type: string
        - name: filters.verificationProvider
          in: query
          description: Exact filter for verification provider
          required: false
          schema:
            type: string
        - name: filters.verificationTimestamp
          in: query
          description: Exact filter for verification timestamp
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[verificationTimestamp].from
          in: query
          description: Filter verification timestamp from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[verificationTimestamp].to
          in: query
          description: Filter verification timestamp to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.certificateValid
          in: query
          description: Exact filter for certificate valid
          required: false
          schema:
            type: boolean
        - name: filters.certificateDetails
          in: query
          description: Exact filter for certificate details
          required: false
          schema:
            type: string
        - name: filters.certificateIssuer
          in: query
          description: Exact filter for certificate issuer
          required: false
          schema:
            type: string
        - name: filters.certificateSubject
          in: query
          description: Exact filter for certificate subject
          required: false
          schema:
            type: string
        - name: filters.certificateValidFrom
          in: query
          description: Exact filter for certificate valid from
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[certificateValidFrom].from
          in: query
          description: Filter certificate valid from from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[certificateValidFrom].to
          in: query
          description: Filter certificate valid from to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.certificateValidUntil
          in: query
          description: Exact filter for certificate valid until
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[certificateValidUntil].from
          in: query
          description: Filter certificate valid until from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[certificateValidUntil].to
          in: query
          description: Filter certificate valid until to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.documentIntegrityValid
          in: query
          description: Exact filter for document integrity valid
          required: false
          schema:
            type: boolean
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.createdBy
          in: query
          description: Exact filter for created by
          required: false
          schema:
            type: string
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedBy
          in: query
          description: Exact filter for updated by
          required: false
          schema:
            type: string
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved signature verifications
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponse'
    post:
      tags:
        - Signature Verification Controller
      summary: Create a new signature verification
      description: Creates a new signature verification
      operationId: createSignatureVerification
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureVerificationDTO'
        required: true
      responses:
        '201':
          description: Signature verification created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureVerificationDTO'
        '400':
          description: Invalid signature verification data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureVerificationDTO'
  /api/v1/signature-verifications/verify:
    post:
      tags:
        - Signature Verification Controller
      summary: Verify a document signature
      description: Verifies a document signature and returns the verification result
      operationId: verifyDocumentSignature
      parameters:
        - name: documentSignatureId
          in: query
          description: ID of the document signature to verify
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Signature verification completed successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureVerificationDTO'
        '400':
          description: Invalid signature verification request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureVerificationDTO'
        '404':
          description: Document signature not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureVerificationDTO'
  /api/v1/signature-requests:
    get:
      tags:
        - Signature Request Controller
      summary: List all signature requests
      description: Returns a paginated list of signature requests with optional filtering
      operationId: listSignatureRequests
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.requestReference
          in: query
          description: Exact filter for request reference
          required: false
          schema:
            type: string
        - name: filters.requestStatus
          in: query
          description: Exact filter for request status
          required: false
          schema:
            type: string
            enum:
              - PENDING
              - IN_PROGRESS
              - SIGNED
              - REJECTED
              - EXPIRED
              - REVOKED
              - FAILED
              - CANCELED
        - name: filters.requestMessage
          in: query
          description: Exact filter for request message
          required: false
          schema:
            type: string
        - name: filters.notificationSent
          in: query
          description: Exact filter for notification sent
          required: false
          schema:
            type: boolean
        - name: filters.notificationSentAt
          in: query
          description: Exact filter for notification sent at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[notificationSentAt].from
          in: query
          description: Filter notification sent at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[notificationSentAt].to
          in: query
          description: Filter notification sent at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.reminderSent
          in: query
          description: Exact filter for reminder sent
          required: false
          schema:
            type: boolean
        - name: filters.reminderSentAt
          in: query
          description: Exact filter for reminder sent at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[reminderSentAt].from
          in: query
          description: Filter reminder sent at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[reminderSentAt].to
          in: query
          description: Filter reminder sent at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.expirationDate
          in: query
          description: Exact filter for expiration date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[expirationDate].from
          in: query
          description: Filter expiration date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[expirationDate].to
          in: query
          description: Filter expiration date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.completedAt
          in: query
          description: Exact filter for completed at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[completedAt].from
          in: query
          description: Filter completed at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[completedAt].to
          in: query
          description: Filter completed at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.createdBy
          in: query
          description: Exact filter for created by
          required: false
          schema:
            type: string
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedBy
          in: query
          description: Exact filter for updated by
          required: false
          schema:
            type: string
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved signature requests
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponse'
    post:
      tags:
        - Signature Request Controller
      summary: Create a new signature request
      description: Creates a new signature request
      operationId: createSignatureRequest
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequestDTO'
        required: true
      responses:
        '201':
          description: Signature request created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureRequestDTO'
        '400':
          description: Invalid signature request data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureRequestDTO'
  /api/v1/signature-requests/{id}/send:
    post:
      tags:
        - Signature Request Controller
      summary: Send a signature request
      description: Sends a notification for a signature request
      operationId: sendSignatureRequest
      parameters:
        - name: id
          in: path
          description: ID of the signature request to send
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Signature request notification sent successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureRequestDTO'
        '404':
          description: Signature request not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureRequestDTO'
  /api/v1/signature-requests/{id}/remind:
    post:
      tags:
        - Signature Request Controller
      summary: Send a reminder for a signature request
      description: Sends a reminder for a signature request
      operationId: sendSignatureRequestReminder
      parameters:
        - name: id
          in: path
          description: ID of the signature request to remind
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Signature request reminder sent successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureRequestDTO'
        '404':
          description: Signature request not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureRequestDTO'
  /api/v1/signature-providers:
    get:
      tags:
        - Signature Provider Controller
      summary: List all signature providers
      description: Returns a paginated list of signature providers with optional filtering
      operationId: listSignatureProviders
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.name
          in: query
          description: Exact filter for name
          required: false
          schema:
            type: string
        - name: filters.description
          in: query
          description: Exact filter for description
          required: false
          schema:
            type: string
        - name: filters.providerCode
          in: query
          description: Exact filter for provider code
          required: false
          schema:
            type: string
        - name: filters.isActive
          in: query
          description: Exact filter for is active
          required: false
          schema:
            type: boolean
        - name: filters.isDefault
          in: query
          description: Exact filter for is default
          required: false
          schema:
            type: boolean
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.createdBy
          in: query
          description: Exact filter for created by
          required: false
          schema:
            type: string
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedBy
          in: query
          description: Exact filter for updated by
          required: false
          schema:
            type: string
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved signature providers
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponse'
    post:
      tags:
        - Signature Provider Controller
      summary: Create a new signature provider
      description: Creates a new signature provider
      operationId: createSignatureProvider
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureProviderDTO'
        required: true
      responses:
        '201':
          description: Signature provider created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureProviderDTO'
        '400':
          description: Invalid signature provider data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureProviderDTO'
  /api/v1/signature-providers/{id}/default:
    post:
      tags:
        - Signature Provider Controller
      summary: Set as default signature provider
      description: Sets a signature provider as the default for the tenant
      operationId: setAsDefaultProvider
      parameters:
        - name: id
          in: path
          description: ID of the signature provider to set as default
          required: true
          schema:
            type: string
            format: uuid
        - name: tenantId
          in: query
          description: Tenant ID
          required: false
          schema:
            type: string
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Signature provider set as default successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureProviderDTO'
        '404':
          description: Signature provider not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignatureProviderDTO'
  /api/v1/folders:
    get:
      tags:
        - Folder Controller
      summary: List all folders
      description: Returns a paginated list of folders with optional filtering
      operationId: listFolders
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.name
          in: query
          description: Exact filter for name
          required: false
          schema:
            type: string
        - name: filters.description
          in: query
          description: Exact filter for description
          required: false
          schema:
            type: string
        - name: filters.path
          in: query
          description: Exact filter for path
          required: false
          schema:
            type: string
        - name: filters.securityLevel
          in: query
          description: Exact filter for security level
          required: false
          schema:
            type: string
            enum:
              - PUBLIC
              - INTERNAL
              - CONFIDENTIAL
              - RESTRICTED
              - SECRET
              - TOP_SECRET
        - name: filters.isSystemFolder
          in: query
          description: Exact filter for is system folder
          required: false
          schema:
            type: boolean
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.createdBy
          in: query
          description: Exact filter for created by
          required: false
          schema:
            type: string
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedBy
          in: query
          description: Exact filter for updated by
          required: false
          schema:
            type: string
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved folders
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponse'
    post:
      tags:
        - Folder Controller
      summary: Create a new folder
      description: Creates a new folder
      operationId: createFolder
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderDTO'
        required: true
      responses:
        '201':
          description: Folder created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FolderDTO'
        '400':
          description: Invalid folder data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FolderDTO'
  /api/v1/documents:
    get:
      tags:
        - Document Controller
      summary: List all documents
      description: Returns a paginated list of documents with optional filtering
      operationId: listDocuments
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.name
          in: query
          description: Exact filter for name
          required: false
          schema:
            type: string
        - name: filters.description
          in: query
          description: Exact filter for description
          required: false
          schema:
            type: string
        - name: filters.fileName
          in: query
          description: Exact filter for file name
          required: false
          schema:
            type: string
        - name: filters.fileExtension
          in: query
          description: Exact filter for file extension
          required: false
          schema:
            type: string
        - name: filters.mimeType
          in: query
          description: Exact filter for mime type
          required: false
          schema:
            type: string
        - name: filters.fileSize
          in: query
          description: Exact filter for file size
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[fileSize].from
          in: query
          description: Filter file size from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[fileSize].to
          in: query
          description: Filter file size to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.documentType
          in: query
          description: Exact filter for document type
          required: false
          schema:
            type: string
            enum:
              - DOCUMENT
              - IMAGE
              - PDF
              - CONTRACT
              - INVOICE
              - RECEIPT
              - FORM
              - REPORT
              - EMAIL
              - AUDIO
              - VIDEO
              - ARCHIVE
              - OTHER
        - name: filters.documentStatus
          in: query
          description: Exact filter for document status
          required: false
          schema:
            type: string
            enum:
              - DRAFT
              - UNDER_REVIEW
              - APPROVED
              - REJECTED
              - PUBLISHED
              - ARCHIVED
              - MARKED_FOR_DELETION
              - DELETED
              - LOCKED
              - EXPIRED
        - name: filters.storageType
          in: query
          description: Exact filter for storage type
          required: false
          schema:
            type: string
            enum:
              - LOCAL_FILESYSTEM
              - DATABASE
              - S3
              - AZURE_BLOB
              - GOOGLE_CLOUD_STORAGE
              - CDN
              - DISTRIBUTED_FS
              - EXTERNAL_REFERENCE
        - name: filters.storagePath
          in: query
          description: Exact filter for storage path
          required: false
          schema:
            type: string
        - name: filters.securityLevel
          in: query
          description: Exact filter for security level
          required: false
          schema:
            type: string
            enum:
              - PUBLIC
              - INTERNAL
              - CONFIDENTIAL
              - RESTRICTED
              - SECRET
              - TOP_SECRET
        - name: filters.isEncrypted
          in: query
          description: Exact filter for is encrypted
          required: false
          schema:
            type: boolean
        - name: filters.isIndexed
          in: query
          description: Exact filter for is indexed
          required: false
          schema:
            type: boolean
        - name: filters.isLocked
          in: query
          description: Exact filter for is locked
          required: false
          schema:
            type: boolean
        - name: filters.lockedBy
          in: query
          description: Exact filter for locked by
          required: false
          schema:
            type: string
        - name: filters.lockedUntil
          in: query
          description: Exact filter for locked until
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[lockedUntil].from
          in: query
          description: Filter locked until from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[lockedUntil].to
          in: query
          description: Filter locked until to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.expirationDate
          in: query
          description: Exact filter for expiration date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[expirationDate].from
          in: query
          description: Filter expiration date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[expirationDate].to
          in: query
          description: Filter expiration date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.retentionDate
          in: query
          description: Exact filter for retention date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[retentionDate].from
          in: query
          description: Filter retention date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[retentionDate].to
          in: query
          description: Filter retention date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.createdBy
          in: query
          description: Exact filter for created by
          required: false
          schema:
            type: string
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedBy
          in: query
          description: Exact filter for updated by
          required: false
          schema:
            type: string
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.checksum
          in: query
          description: Exact filter for checksum
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved documents
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponse'
    post:
      tags:
        - Document Controller
      summary: Create a new document
      description: Creates a new document
      operationId: createDocument
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentDTO'
        required: true
      responses:
        '201':
          description: Document created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentDTO'
        '400':
          description: Invalid document data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentDTO'
  /api/v1/documents/{id}/versions:
    post:
      tags:
        - Document Controller
      summary: Create new document version
      description: Creates a new version of a document with new content
      operationId: createVersion
      parameters:
        - name: id
          in: path
          description: ID of the document to create version for
          required: true
          schema:
            type: string
            format: uuid
        - name: comment
          in: query
          description: Version comment
          required: false
          schema:
            type: string
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  description: File for new version
                  format: binary
      responses:
        '200':
          description: Document version created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentDTO'
        '400':
          description: Invalid file upload
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentDTO'
        '404':
          description: Document not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentDTO'
  /api/v1/documents/{id}/upload:
    post:
      tags:
        - Document Controller
      summary: Upload document content
      description: Uploads file content for an existing document
      operationId: uploadContent
      parameters:
        - name: id
          in: path
          description: ID of the document to upload content for
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  description: File to upload
                  format: binary
      responses:
        '200':
          description: Document content uploaded successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentDTO'
        '400':
          description: Invalid file upload
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentDTO'
        '404':
          description: Document not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentDTO'
  /api/v1/documents/{documentId}/versions:
    get:
      tags:
        - Document Version Controller
      summary: List all versions of a document
      description: Returns a paginated list of versions for a specific document
      operationId: listDocumentVersions
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.versionNumber
          in: query
          description: Exact filter for version number
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[versionNumber].from
          in: query
          description: Filter version number from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[versionNumber].to
          in: query
          description: Filter version number to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.fileName
          in: query
          description: Exact filter for file name
          required: false
          schema:
            type: string
        - name: filters.fileExtension
          in: query
          description: Exact filter for file extension
          required: false
          schema:
            type: string
        - name: filters.mimeType
          in: query
          description: Exact filter for mime type
          required: false
          schema:
            type: string
        - name: filters.fileSize
          in: query
          description: Exact filter for file size
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[fileSize].from
          in: query
          description: Filter file size from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[fileSize].to
          in: query
          description: Filter file size to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.storageType
          in: query
          description: Exact filter for storage type
          required: false
          schema:
            type: string
            enum:
              - LOCAL_FILESYSTEM
              - DATABASE
              - S3
              - AZURE_BLOB
              - GOOGLE_CLOUD_STORAGE
              - CDN
              - DISTRIBUTED_FS
              - EXTERNAL_REFERENCE
        - name: filters.storagePath
          in: query
          description: Exact filter for storage path
          required: false
          schema:
            type: string
        - name: filters.isEncrypted
          in: query
          description: Exact filter for is encrypted
          required: false
          schema:
            type: boolean
        - name: filters.changeSummary
          in: query
          description: Exact filter for change summary
          required: false
          schema:
            type: string
        - name: filters.isMajorVersion
          in: query
          description: Exact filter for is major version
          required: false
          schema:
            type: boolean
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.createdBy
          in: query
          description: Exact filter for created by
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved document versions
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: Document not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentVersionDTO'
    post:
      tags:
        - Document Version Controller
      summary: Create a new document version
      description: Creates a new version for a document
      operationId: createDocumentVersion
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentVersionDTO'
        required: true
      responses:
        '201':
          description: Document version created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentVersionDTO'
        '400':
          description: Invalid document version data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentVersionDTO'
        '404':
          description: Document not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentVersionDTO'
  /api/v1/documents/{documentId}/versions/{versionId}/upload:
    post:
      tags:
        - Document Version Controller
      summary: Upload content for a document version
      description: Uploads file content for a specific document version
      operationId: uploadVersionContent
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: versionId
          in: path
          description: ID of the version to upload content for
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  description: File to upload
                  format: binary
      responses:
        '200':
          description: Version content uploaded successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentVersionDTO'
        '400':
          description: Invalid file upload
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentVersionDTO'
        '404':
          description: Document version not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentVersionDTO'
  /api/v1/documents/{documentId}/tags:
    get:
      tags:
        - Document Tag Controller
      summary: List all tags for a document
      description: Returns all tags associated with a specific document
      operationId: listDocumentTags
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.createdBy
          in: query
          description: Exact filter for created by
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved document tags
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: Document not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentTagDTO'
    post:
      tags:
        - Document Tag Controller
      summary: Add a tag to a document
      description: Associates a tag with a document
      operationId: addTagToDocument
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentTagDTO'
        required: true
      responses:
        '201':
          description: Tag added to document successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentTagDTO'
        '400':
          description: Invalid tag data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentTagDTO'
        '404':
          description: Document or tag not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentTagDTO'
  /api/v1/documents/{documentId}/signatures:
    get:
      tags:
        - Document Signature Controller
      summary: List all signatures for a document
      description: Returns all signatures for a specific document
      operationId: listDocumentSignatures
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.signerName
          in: query
          description: Exact filter for signer name
          required: false
          schema:
            type: string
        - name: filters.signerEmail
          in: query
          description: Exact filter for signer email
          required: false
          schema:
            type: string
        - name: filters.signatureType
          in: query
          description: Exact filter for signature type
          required: false
          schema:
            type: string
            enum:
              - BASIC
              - ADVANCED
              - ADVANCED_WITH_QCERT
              - QUALIFIED
              - DIGITAL
              - BIOMETRIC
        - name: filters.signatureFormat
          in: query
          description: Exact filter for signature format
          required: false
          schema:
            type: string
            enum:
              - PADES
              - XADES
              - CADES
              - JADES
              - PDF_VISIBLE
              - PDF_INVISIBLE
              - TIMESTAMP
        - name: filters.signatureStatus
          in: query
          description: Exact filter for signature status
          required: false
          schema:
            type: string
            enum:
              - PENDING
              - IN_PROGRESS
              - SIGNED
              - REJECTED
              - EXPIRED
              - REVOKED
              - FAILED
              - CANCELED
        - name: filters.signatureData
          in: query
          description: Exact filter for signature data
          required: false
          schema:
            type: string
        - name: filters.signatureCertificate
          in: query
          description: Exact filter for signature certificate
          required: false
          schema:
            type: string
        - name: filters.signaturePositionX
          in: query
          description: Exact filter for signature position x
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[signaturePositionX].from
          in: query
          description: Filter signature position x from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[signaturePositionX].to
          in: query
          description: Filter signature position x to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.signaturePositionY
          in: query
          description: Exact filter for signature position y
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[signaturePositionY].from
          in: query
          description: Filter signature position y from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[signaturePositionY].to
          in: query
          description: Filter signature position y to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.signaturePage
          in: query
          description: Exact filter for signature page
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[signaturePage].from
          in: query
          description: Filter signature page from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[signaturePage].to
          in: query
          description: Filter signature page to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.signatureWidth
          in: query
          description: Exact filter for signature width
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[signatureWidth].from
          in: query
          description: Filter signature width from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[signatureWidth].to
          in: query
          description: Filter signature width to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.signatureHeight
          in: query
          description: Exact filter for signature height
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[signatureHeight].from
          in: query
          description: Filter signature height from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[signatureHeight].to
          in: query
          description: Filter signature height to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.signatureReason
          in: query
          description: Exact filter for signature reason
          required: false
          schema:
            type: string
        - name: filters.signatureLocation
          in: query
          description: Exact filter for signature location
          required: false
          schema:
            type: string
        - name: filters.signatureContactInfo
          in: query
          description: Exact filter for signature contact info
          required: false
          schema:
            type: string
        - name: filters.expirationDate
          in: query
          description: Exact filter for expiration date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[expirationDate].from
          in: query
          description: Filter expiration date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[expirationDate].to
          in: query
          description: Filter expiration date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.signedAt
          in: query
          description: Exact filter for signed at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[signedAt].from
          in: query
          description: Filter signed at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[signedAt].to
          in: query
          description: Filter signed at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.customSignatureMessage
          in: query
          description: Exact filter for custom signature message
          required: false
          schema:
            type: string
        - name: filters.signerLanguage
          in: query
          description: Exact filter for signer language
          required: false
          schema:
            type: string
        - name: filters.signerTimeZone
          in: query
          description: Exact filter for signer time zone
          required: false
          schema:
            type: string
        - name: filters.signingOrder
          in: query
          description: Exact filter for signing order
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[signingOrder].from
          in: query
          description: Filter signing order from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[signingOrder].to
          in: query
          description: Filter signing order to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.signerRole
          in: query
          description: Exact filter for signer role
          required: false
          schema:
            type: string
        - name: filters.signatureRequired
          in: query
          description: Exact filter for signature required
          required: false
          schema:
            type: boolean
        - name: filters.authenticationMethod
          in: query
          description: Exact filter for authentication method
          required: false
          schema:
            type: string
        - name: filters.signingUrl
          in: query
          description: Exact filter for signing url
          required: false
          schema:
            type: string
        - name: filters.ecmMetadata
          in: query
          description: Exact filter for ecm metadata
          required: false
          schema:
            type: string
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.createdBy
          in: query
          description: Exact filter for created by
          required: false
          schema:
            type: string
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedBy
          in: query
          description: Exact filter for updated by
          required: false
          schema:
            type: string
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved document signatures
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: Document not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentSignatureDTO'
    post:
      tags:
        - Document Signature Controller
      summary: Add a signature to a document
      description: Creates a new signature for a document
      operationId: addDocumentSignature
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSignatureDTO'
        required: true
      responses:
        '201':
          description: Document signature created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentSignatureDTO'
        '400':
          description: Invalid document signature data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentSignatureDTO'
        '404':
          description: Document not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentSignatureDTO'
  /api/v1/documents/{documentId}/permissions:
    get:
      tags:
        - Document Permission Controller
      summary: List all permissions for a document
      description: Returns all permissions for a specific document
      operationId: listDocumentPermissions
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.permissionType
          in: query
          description: Exact filter for permission type
          required: false
          schema:
            type: string
            enum:
              - READ
              - WRITE
              - DELETE
              - SHARE
              - EXECUTE
              - CREATE
              - MOVE
              - COPY
              - VIEW_METADATA
              - MODIFY_METADATA
              - VIEW_VERSIONS
              - CREATE_VERSION
              - VIEW_AUDIT
              - MANAGE_PERMISSIONS
              - CHECKOUT
              - CHECKIN
              - SIGN
              - SEND_FOR_SIGNATURE
              - ADMIN
        - name: filters.isGranted
          in: query
          description: Exact filter for is granted
          required: false
          schema:
            type: boolean
        - name: filters.expirationDate
          in: query
          description: Exact filter for expiration date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[expirationDate].from
          in: query
          description: Filter expiration date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[expirationDate].to
          in: query
          description: Filter expiration date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.createdBy
          in: query
          description: Exact filter for created by
          required: false
          schema:
            type: string
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedBy
          in: query
          description: Exact filter for updated by
          required: false
          schema:
            type: string
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved document permissions
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: Document not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentPermissionDTO'
    post:
      tags:
        - Document Permission Controller
      summary: Add a permission to a document
      description: Creates a new permission for a document
      operationId: addDocumentPermission
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentPermissionDTO'
        required: true
      responses:
        '201':
          description: Document permission created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentPermissionDTO'
        '400':
          description: Invalid document permission data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentPermissionDTO'
        '404':
          description: Document not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentPermissionDTO'
  /api/v1/documents/{documentId}/metadata:
    get:
      tags:
        - Document Metadata Controller
      summary: Get all metadata for a document
      description: Returns all metadata for a specific document
      operationId: getAllMetadata
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.key
          in: query
          description: Exact filter for key
          required: false
          schema:
            type: string
        - name: filters.value
          in: query
          description: Exact filter for value
          required: false
          schema:
            type: string
        - name: filters.type
          in: query
          description: Exact filter for type
          required: false
          schema:
            type: string
        - name: filters.isSearchable
          in: query
          description: Exact filter for is searchable
          required: false
          schema:
            type: boolean
        - name: filters.isSystemMetadata
          in: query
          description: Exact filter for is system metadata
          required: false
          schema:
            type: boolean
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.createdBy
          in: query
          description: Exact filter for created by
          required: false
          schema:
            type: string
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedBy
          in: query
          description: Exact filter for updated by
          required: false
          schema:
            type: string
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved document metadata
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: Document not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentMetadataDTO'
    post:
      tags:
        - Document Metadata Controller
      summary: Add metadata to a document
      description: Adds new metadata to a document
      operationId: addMetadata
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentMetadataDTO'
        required: true
      responses:
        '201':
          description: Document metadata created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentMetadataDTO'
        '400':
          description: Invalid document metadata data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentMetadataDTO'
        '404':
          description: Document not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentMetadataDTO'
  /api/v1/tags/{id}/documents:
    get:
      tags:
        - Tag Controller
      summary: List all documents with a specific tag
      description: Returns all documents that have a specific tag
      operationId: listDocumentsWithTag
      parameters:
        - name: id
          in: path
          description: ID of the tag
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.name
          in: query
          description: Exact filter for name
          required: false
          schema:
            type: string
        - name: filters.description
          in: query
          description: Exact filter for description
          required: false
          schema:
            type: string
        - name: filters.fileName
          in: query
          description: Exact filter for file name
          required: false
          schema:
            type: string
        - name: filters.fileExtension
          in: query
          description: Exact filter for file extension
          required: false
          schema:
            type: string
        - name: filters.mimeType
          in: query
          description: Exact filter for mime type
          required: false
          schema:
            type: string
        - name: filters.fileSize
          in: query
          description: Exact filter for file size
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[fileSize].from
          in: query
          description: Filter file size from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[fileSize].to
          in: query
          description: Filter file size to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.documentType
          in: query
          description: Exact filter for document type
          required: false
          schema:
            type: string
            enum:
              - DOCUMENT
              - IMAGE
              - PDF
              - CONTRACT
              - INVOICE
              - RECEIPT
              - FORM
              - REPORT
              - EMAIL
              - AUDIO
              - VIDEO
              - ARCHIVE
              - OTHER
        - name: filters.documentStatus
          in: query
          description: Exact filter for document status
          required: false
          schema:
            type: string
            enum:
              - DRAFT
              - UNDER_REVIEW
              - APPROVED
              - REJECTED
              - PUBLISHED
              - ARCHIVED
              - MARKED_FOR_DELETION
              - DELETED
              - LOCKED
              - EXPIRED
        - name: filters.storageType
          in: query
          description: Exact filter for storage type
          required: false
          schema:
            type: string
            enum:
              - LOCAL_FILESYSTEM
              - DATABASE
              - S3
              - AZURE_BLOB
              - GOOGLE_CLOUD_STORAGE
              - CDN
              - DISTRIBUTED_FS
              - EXTERNAL_REFERENCE
        - name: filters.storagePath
          in: query
          description: Exact filter for storage path
          required: false
          schema:
            type: string
        - name: filters.securityLevel
          in: query
          description: Exact filter for security level
          required: false
          schema:
            type: string
            enum:
              - PUBLIC
              - INTERNAL
              - CONFIDENTIAL
              - RESTRICTED
              - SECRET
              - TOP_SECRET
        - name: filters.isEncrypted
          in: query
          description: Exact filter for is encrypted
          required: false
          schema:
            type: boolean
        - name: filters.isIndexed
          in: query
          description: Exact filter for is indexed
          required: false
          schema:
            type: boolean
        - name: filters.isLocked
          in: query
          description: Exact filter for is locked
          required: false
          schema:
            type: boolean
        - name: filters.lockedBy
          in: query
          description: Exact filter for locked by
          required: false
          schema:
            type: string
        - name: filters.lockedUntil
          in: query
          description: Exact filter for locked until
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[lockedUntil].from
          in: query
          description: Filter locked until from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[lockedUntil].to
          in: query
          description: Filter locked until to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.expirationDate
          in: query
          description: Exact filter for expiration date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[expirationDate].from
          in: query
          description: Filter expiration date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[expirationDate].to
          in: query
          description: Filter expiration date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.retentionDate
          in: query
          description: Exact filter for retention date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[retentionDate].from
          in: query
          description: Filter retention date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[retentionDate].to
          in: query
          description: Filter retention date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.createdBy
          in: query
          description: Exact filter for created by
          required: false
          schema:
            type: string
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedBy
          in: query
          description: Exact filter for updated by
          required: false
          schema:
            type: string
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.checksum
          in: query
          description: Exact filter for checksum
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved documents
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: Tag not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentDTO'
  /api/v1/folders/{id}/documents:
    get:
      tags:
        - Folder Controller
      summary: List all documents in a folder
      description: Returns all documents in a specific folder
      operationId: listDocumentsInFolder
      parameters:
        - name: id
          in: path
          description: ID of the folder
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.name
          in: query
          description: Exact filter for name
          required: false
          schema:
            type: string
        - name: filters.description
          in: query
          description: Exact filter for description
          required: false
          schema:
            type: string
        - name: filters.fileName
          in: query
          description: Exact filter for file name
          required: false
          schema:
            type: string
        - name: filters.fileExtension
          in: query
          description: Exact filter for file extension
          required: false
          schema:
            type: string
        - name: filters.mimeType
          in: query
          description: Exact filter for mime type
          required: false
          schema:
            type: string
        - name: filters.fileSize
          in: query
          description: Exact filter for file size
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[fileSize].from
          in: query
          description: Filter file size from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[fileSize].to
          in: query
          description: Filter file size to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.documentType
          in: query
          description: Exact filter for document type
          required: false
          schema:
            type: string
            enum:
              - DOCUMENT
              - IMAGE
              - PDF
              - CONTRACT
              - INVOICE
              - RECEIPT
              - FORM
              - REPORT
              - EMAIL
              - AUDIO
              - VIDEO
              - ARCHIVE
              - OTHER
        - name: filters.documentStatus
          in: query
          description: Exact filter for document status
          required: false
          schema:
            type: string
            enum:
              - DRAFT
              - UNDER_REVIEW
              - APPROVED
              - REJECTED
              - PUBLISHED
              - ARCHIVED
              - MARKED_FOR_DELETION
              - DELETED
              - LOCKED
              - EXPIRED
        - name: filters.storageType
          in: query
          description: Exact filter for storage type
          required: false
          schema:
            type: string
            enum:
              - LOCAL_FILESYSTEM
              - DATABASE
              - S3
              - AZURE_BLOB
              - GOOGLE_CLOUD_STORAGE
              - CDN
              - DISTRIBUTED_FS
              - EXTERNAL_REFERENCE
        - name: filters.storagePath
          in: query
          description: Exact filter for storage path
          required: false
          schema:
            type: string
        - name: filters.securityLevel
          in: query
          description: Exact filter for security level
          required: false
          schema:
            type: string
            enum:
              - PUBLIC
              - INTERNAL
              - CONFIDENTIAL
              - RESTRICTED
              - SECRET
              - TOP_SECRET
        - name: filters.isEncrypted
          in: query
          description: Exact filter for is encrypted
          required: false
          schema:
            type: boolean
        - name: filters.isIndexed
          in: query
          description: Exact filter for is indexed
          required: false
          schema:
            type: boolean
        - name: filters.isLocked
          in: query
          description: Exact filter for is locked
          required: false
          schema:
            type: boolean
        - name: filters.lockedBy
          in: query
          description: Exact filter for locked by
          required: false
          schema:
            type: string
        - name: filters.lockedUntil
          in: query
          description: Exact filter for locked until
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[lockedUntil].from
          in: query
          description: Filter locked until from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[lockedUntil].to
          in: query
          description: Filter locked until to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.expirationDate
          in: query
          description: Exact filter for expiration date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[expirationDate].from
          in: query
          description: Filter expiration date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[expirationDate].to
          in: query
          description: Filter expiration date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.retentionDate
          in: query
          description: Exact filter for retention date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[retentionDate].from
          in: query
          description: Filter retention date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[retentionDate].to
          in: query
          description: Filter retention date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.createdBy
          in: query
          description: Exact filter for created by
          required: false
          schema:
            type: string
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedBy
          in: query
          description: Exact filter for updated by
          required: false
          schema:
            type: string
        - name: filters.version
          in: query
          description: Exact filter for version
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].from
          in: query
          description: Filter version from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[version].to
          in: query
          description: Filter version to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.checksum
          in: query
          description: Exact filter for checksum
          required: false
          schema:
            type: string
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved documents
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: Folder not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseDocumentDTO'
  /api/v1/documents/{id}/metadata:
    get:
      tags:
        - Document Controller
      summary: Get document content metadata
      description: Retrieves metadata about document content
      operationId: getContentMetadata
      parameters:
        - name: id
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Document metadata retrieved successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentDTO'
        '404':
          description: Document not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentDTO'
  /api/v1/documents/{id}/download:
    get:
      tags:
        - Document Controller
      summary: Download document content
      description: Downloads the content of a document
      operationId: downloadContent
      parameters:
        - name: id
          in: path
          description: ID of the document to download
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Document content downloaded successfully
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataBuffer'
        '404':
          description: Document content not available
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataBuffer'
  /api/v1/documents/{documentId}/versions/{versionId}:
    get:
      tags:
        - Document Version Controller
      summary: Get specific version of a document
      description: Returns a specific version of a document
      operationId: getDocumentVersion
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: versionId
          in: path
          description: ID of the version to retrieve
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved document version
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentVersionDTO'
        '404':
          description: Document version not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentVersionDTO'
    delete:
      tags:
        - Document Version Controller
      summary: Delete a document version
      description: Deletes a specific version of a document
      operationId: deleteDocumentVersion
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: versionId
          in: path
          description: ID of the version to delete
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Document version deleted successfully
        '404':
          description: Document version not found
  /api/v1/documents/{documentId}/versions/{versionId}/metadata:
    get:
      tags:
        - Document Version Controller
      summary: Get document version content metadata
      description: Retrieves metadata about document version content
      operationId: getVersionContentMetadata
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: versionId
          in: path
          description: ID of the version
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Version metadata retrieved successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentVersionDTO'
        '404':
          description: Document version not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentVersionDTO'
  /api/v1/documents/{documentId}/versions/{versionId}/download:
    get:
      tags:
        - Document Version Controller
      summary: Download document version content
      description: Downloads the content of a specific document version
      operationId: downloadVersionContent
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: versionId
          in: path
          description: ID of the version to download
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Version content downloaded successfully
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataBuffer'
        '404':
          description: Version content not available
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataBuffer'
  /api/v1/documents/{documentId}/tags/{tagId}:
    delete:
      tags:
        - Document Tag Controller
      summary: Remove a tag from a document
      description: Removes a tag association from a document
      operationId: removeTagFromDocument
      parameters:
        - name: documentId
          in: path
          description: ID of the document
          required: true
          schema:
            type: string
            format: uuid
        - name: tagId
          in: path
          description: ID of the tag to remove
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Party-ID
          in: header
          description: Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Employee-ID
          in: header
          description: Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Service-Account-ID
          in: header
          description: Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)
          required: false
          schema:
            type: string
        - name: X-Auth-Roles
          in: header
          description: Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Auth-Scopes
          in: header
          description: OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)
          required: false
          schema:
            type: string
        - name: X-Request-ID
          in: header
          description: Unique identifier for the request, used for traceability (optional)
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Tag removed from document successfully
        '404':
          description: Document tag association not found
components:
  schemas:
    TagDTO:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the tag
          format: uuid
        name:
          type: string
          description: Name of the tag
        description:
          type: string
          description: Description of the tag
        color:
          type: string
          description: Color of the tag (hex code)
        isSystemTag:
          type: boolean
          description: Indicates if this is a system tag
        tenantId:
          type: string
          description: Tenant ID for multi-tenancy support
        createdAt:
          type: string
          description: Date and time when the tag was created
          format: date-time
        createdBy:
          type: string
          description: User who created the tag
        updatedAt:
          type: string
          description: Date and time when the tag was last updated
          format: date-time
        updatedBy:
          type: string
          description: User who last updated the tag
        version:
          type: integer
          description: Version number for optimistic locking
          format: int64
      description: Tag data transfer object
    SignatureVerificationDTO:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the signature verification
          format: uuid
          readOnly: true
        documentSignatureId:
          type: string
          description: ID of the document signature being verified
          format: uuid
        verificationStatus:
          type: string
          description: Status of the verification
          enum:
            - VALID
            - INVALID
            - INDETERMINATE
            - IN_PROGRESS
            - FAILED
            - NOT_VERIFIED
        verificationDetails:
          type: string
          description: Details of the verification
        verificationProvider:
          type: string
          description: Provider used for verification
        verificationTimestamp:
          type: string
          description: Timestamp of the verification
          format: date-time
        certificateValid:
          type: boolean
          description: Indicates if the certificate is valid
        certificateDetails:
          type: string
          description: Details of the certificate
        certificateIssuer:
          type: string
          description: Issuer of the certificate
        certificateSubject:
          type: string
          description: Subject of the certificate
        certificateValidFrom:
          type: string
          description: Date and time from which the certificate is valid
          format: date-time
        certificateValidUntil:
          type: string
          description: Date and time until which the certificate is valid
          format: date-time
        documentIntegrityValid:
          type: boolean
          description: Indicates if the document integrity is valid
        tenantId:
          type: string
          description: Tenant ID for multi-tenancy support
        createdAt:
          type: string
          description: Date and time when the signature verification was created
          format: date-time
          readOnly: true
        createdBy:
          type: string
          description: User who created the signature verification
          readOnly: true
        updatedAt:
          type: string
          description: Date and time when the signature verification was last updated
          format: date-time
          readOnly: true
        updatedBy:
          type: string
          description: User who last updated the signature verification
          readOnly: true
        version:
          type: integer
          description: Version number for optimistic locking
          format: int64
          readOnly: true
      description: Signature verification data transfer object
    SignatureRequestDTO:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the signature request
          format: uuid
          readOnly: true
        documentSignatureId:
          type: string
          description: ID of the document signature this request is for
          format: uuid
        requestReference:
          type: string
          description: Reference code for the signature request
        requestStatus:
          type: string
          description: Status of the signature request
          enum:
            - PENDING
            - IN_PROGRESS
            - SIGNED
            - REJECTED
            - EXPIRED
            - REVOKED
            - FAILED
            - CANCELED
        requestMessage:
          type: string
          description: Message to include in the signature request
        notificationSent:
          type: boolean
          description: Indicates if a notification has been sent to the signer
        notificationSentAt:
          type: string
          description: Date and time when the notification was sent
          format: date-time
        reminderSent:
          type: boolean
          description: Indicates if a reminder has been sent to the signer
        reminderSentAt:
          type: string
          description: Date and time when the reminder was sent
          format: date-time
        expirationDate:
          type: string
          description: Date and time when the signature request expires
          format: date-time
        completedAt:
          type: string
          description: Date and time when the signature request was completed
          format: date-time
        tenantId:
          type: string
          description: Tenant ID for multi-tenancy support
        createdAt:
          type: string
          description: Date and time when the signature request was created
          format: date-time
          readOnly: true
        createdBy:
          type: string
          description: User who created the signature request
          readOnly: true
        updatedAt:
          type: string
          description: Date and time when the signature request was last updated
          format: date-time
          readOnly: true
        updatedBy:
          type: string
          description: User who last updated the signature request
          readOnly: true
        version:
          type: integer
          description: Version number for optimistic locking
          format: int64
          readOnly: true
      description: Signature request data transfer object
    SignatureProviderDTO:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the signature provider
          format: uuid
          readOnly: true
        name:
          type: string
          description: Name of the signature provider
        description:
          type: string
          description: Description of the signature provider
        providerCode:
          type: string
          description: Provider code for identifying the QTSP integration
        isActive:
          type: boolean
          description: Indicates if the signature provider is active
        isDefault:
          type: boolean
          description: Indicates if this is the default signature provider
        tenantId:
          type: string
          description: Tenant ID for multi-tenancy support
        createdAt:
          type: string
          description: Date and time when the signature provider was created
          format: date-time
          readOnly: true
        createdBy:
          type: string
          description: User who created the signature provider
          readOnly: true
        updatedAt:
          type: string
          description: Date and time when the signature provider was last updated
          format: date-time
          readOnly: true
        updatedBy:
          type: string
          description: User who last updated the signature provider
          readOnly: true
        version:
          type: integer
          description: Version number for optimistic locking
          format: int64
          readOnly: true
      description: Signature provider data transfer object
    FolderDTO:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the folder
          format: uuid
          readOnly: true
        name:
          type: string
          description: Name of the folder
        description:
          type: string
          description: Description of the folder
        parentFolderId:
          type: string
          description: ID of the parent folder
          format: uuid
        path:
          type: string
          description: Path of the folder in the folder hierarchy
        securityLevel:
          type: string
          description: Security level of the folder
          enum:
            - PUBLIC
            - INTERNAL
            - CONFIDENTIAL
            - RESTRICTED
            - SECRET
            - TOP_SECRET
        isSystemFolder:
          type: boolean
          description: Indicates if this is a system folder
        tenantId:
          type: string
          description: Tenant ID for multi-tenancy support
        createdAt:
          type: string
          description: Date and time when the folder was created
          format: date-time
        createdBy:
          type: string
          description: User who created the folder
        updatedAt:
          type: string
          description: Date and time when the folder was last updated
          format: date-time
        updatedBy:
          type: string
          description: User who last updated the folder
        version:
          type: integer
          description: Version number for optimistic locking
          format: int64
      description: Folder data transfer object
    DocumentDTO:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the document
          format: uuid
          readOnly: true
        name:
          type: string
          description: Name of the document
        description:
          type: string
          description: Description of the document
        fileName:
          type: string
          description: Original file name of the document
        fileExtension:
          type: string
          description: File extension of the document
        mimeType:
          type: string
          description: MIME type of the document
        fileSize:
          type: integer
          description: Size of the document file in bytes
          format: int64
        documentType:
          type: string
          description: Type of the document
          enum:
            - DOCUMENT
            - IMAGE
            - PDF
            - CONTRACT
            - INVOICE
            - RECEIPT
            - FORM
            - REPORT
            - EMAIL
            - AUDIO
            - VIDEO
            - ARCHIVE
            - OTHER
        documentStatus:
          type: string
          description: Current status of the document
          enum:
            - DRAFT
            - UNDER_REVIEW
            - APPROVED
            - REJECTED
            - PUBLISHED
            - ARCHIVED
            - MARKED_FOR_DELETION
            - DELETED
            - LOCKED
            - EXPIRED
        storageType:
          type: string
          description: Storage type of the document
          enum:
            - LOCAL_FILESYSTEM
            - DATABASE
            - S3
            - AZURE_BLOB
            - GOOGLE_CLOUD_STORAGE
            - CDN
            - DISTRIBUTED_FS
            - EXTERNAL_REFERENCE
        storagePath:
          type: string
          description: Path where the document is stored
        securityLevel:
          type: string
          description: Security level of the document
          enum:
            - PUBLIC
            - INTERNAL
            - CONFIDENTIAL
            - RESTRICTED
            - SECRET
            - TOP_SECRET
        folderId:
          type: string
          description: ID of the folder containing the document
          format: uuid
        isEncrypted:
          type: boolean
          description: Indicates if the document is encrypted
        isIndexed:
          type: boolean
          description: Indicates if the document is indexed for search
        isLocked:
          type: boolean
          description: Indicates if the document is locked for editing
        lockedBy:
          type: string
          description: User who locked the document
        lockedUntil:
          type: string
          description: Date and time until the document is locked
          format: date-time
        expirationDate:
          type: string
          description: Date and time when the document expires
          format: date-time
        retentionDate:
          type: string
          description: Date and time until the document should be retained
          format: date-time
        tenantId:
          type: string
          description: Tenant ID for multi-tenancy support
        createdAt:
          type: string
          description: Date and time when the document was created
          format: date-time
        createdBy:
          type: string
          description: User who created the document
        updatedAt:
          type: string
          description: Date and time when the document was last updated
          format: date-time
        updatedBy:
          type: string
          description: User who last updated the document
        version:
          type: integer
          description: Version number for optimistic locking
          format: int64
        checksum:
          type: string
          description: Checksum of the document file for integrity verification
      description: Document data transfer object
    DocumentSignatureDTO:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the document signature
          format: uuid
          readOnly: true
        documentId:
          type: string
          description: ID of the document being signed
          format: uuid
        documentVersionId:
          type: string
          description: ID of the document version being signed
          format: uuid
        signatureProviderId:
          type: string
          description: ID of the signature provider
          format: uuid
        signerPartyId:
          type: string
          description: ID of the party signing the document
          format: uuid
        signerName:
          type: string
          description: Name of the signer
        signerEmail:
          type: string
          description: Email of the signer
        signatureType:
          type: string
          description: Type of signature
          enum:
            - BASIC
            - ADVANCED
            - ADVANCED_WITH_QCERT
            - QUALIFIED
            - DIGITAL
            - BIOMETRIC
        signatureFormat:
          type: string
          description: Format of signature
          enum:
            - PADES
            - XADES
            - CADES
            - JADES
            - PDF_VISIBLE
            - PDF_INVISIBLE
            - TIMESTAMP
        signatureStatus:
          type: string
          description: Status of the signature
          enum:
            - PENDING
            - IN_PROGRESS
            - SIGNED
            - REJECTED
            - EXPIRED
            - REVOKED
            - FAILED
            - CANCELED
        signatureData:
          type: string
          description: Signature data (base64 encoded)
        signatureCertificate:
          type: string
          description: Signature certificate (base64 encoded)
        signaturePositionX:
          type: integer
          description: X position of the signature on the document
          format: int32
        signaturePositionY:
          type: integer
          description: Y position of the signature on the document
          format: int32
        signaturePage:
          type: integer
          description: Page number where the signature appears
          format: int32
        signatureWidth:
          type: integer
          description: Width of the signature
          format: int32
        signatureHeight:
          type: integer
          description: Height of the signature
          format: int32
        signatureReason:
          type: string
          description: Reason for signing
        signatureLocation:
          type: string
          description: Location where the document was signed
        signatureContactInfo:
          type: string
          description: Contact information of the signer
        expirationDate:
          type: string
          description: Date and time when the signature expires
          format: date-time
        signedAt:
          type: string
          description: Date and time when the document was signed
          format: date-time
        tenantId:
          type: string
          description: Tenant ID for multi-tenancy support
        customSignatureMessage:
          maxLength: 1000
          type: string
          description: Custom message displayed to the signer during the signing process. This message will be shown in the ECM provider's interface. If not provided, defaults to configuration value.
          example: Please review and sign this important contract by Friday
        signerLanguage:
          pattern: ^[a-z]{2}$
          type: string
          description: 'ISO 639-1 language code for the signer''s preferred language. Determines the language of the ECM provider''s signing interface. Supported values: en, es, fr, de, it, pt, etc.'
          example: en
          default: en
        signerTimeZone:
          type: string
          description: Time zone identifier for the signer. Used for displaying dates and times in the signer's local time zone during the signing process.
          example: America/New_York
          default: UTC
        signingOrder:
          maximum: 100
          minimum: 1
          type: integer
          description: Signing order for multiple signers. Determines the sequence in which signers must complete their signatures. Lower numbers sign first.
          format: int32
          example: 1
          default: 1
        signerRole:
          type: string
          description: 'Role of the signer in the document workflow. Affects permissions and display in the ECM provider interface. Valid values: Signer, Approver, Reviewer, Witness, Notary, CC'
          example: Approver
          default: Signer
          enum:
            - Signer
            - Approver
            - Reviewer
            - Witness
            - Notary
            - CC
        signatureRequired:
          type: boolean
          description: Whether this signature is required for document completion. If false, the signature is optional and document can be completed without it.
          example: true
          default: true
        authenticationMethod:
          type: string
          description: 'Authentication method required before signing. Determines how the signer must verify their identity before accessing the document. Valid values: EMAIL, SMS, PHONE, ACCESS_CODE, ID_CHECK, NONE'
          example: EMAIL
          default: EMAIL
          enum:
            - EMAIL
            - SMS
            - PHONE
            - ACCESS_CODE
            - ID_CHECK
            - NONE
        externalSignerId:
          type: string
          description: External signer ID assigned by the ECM provider (e.g., DocuSign envelope ID). This field is populated automatically when the signature request is created through an ECM provider and is used for tracking and status updates.
          readOnly: true
          example: envelope-12345-abcdef
        signingUrl:
          type: string
          description: Direct URL for the signer to access the document for signing. Generated by the ECM provider and sent to the signer via email or other means. This URL is typically time-limited and signer-specific.
          readOnly: true
          example: https://demo.docusign.net/signing/startinsession.aspx?t=12345
        ecmMetadata:
          maxLength: 5000
          type: string
          description: Additional metadata specific to the ECM provider. Can contain provider-specific configuration, tracking information, or custom fields in JSON format. Maximum 5000 characters.
          example: '{"provider":"docusign","templateId":"template-123","customFields":{"department":"legal"}}'
        createdAt:
          type: string
          description: Date and time when the document signature was created
          format: date-time
          readOnly: true
        createdBy:
          type: string
          description: User who created the document signature
          readOnly: true
        updatedAt:
          type: string
          description: Date and time when the document signature was last updated
          format: date-time
          readOnly: true
        updatedBy:
          type: string
          description: User who last updated the document signature
          readOnly: true
        version:
          type: integer
          description: Version number for optimistic locking
          format: int64
          readOnly: true
      description: Document signature data transfer object
    DocumentPermissionDTO:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the permission
          format: uuid
        documentId:
          type: string
          description: ID of the document this permission applies to
          format: uuid
        partyId:
          type: string
          description: ID of the party this permission applies to
          format: uuid
        permissionType:
          type: string
          description: Type of permission
          enum:
            - READ
            - WRITE
            - DELETE
            - SHARE
            - EXECUTE
            - CREATE
            - MOVE
            - COPY
            - VIEW_METADATA
            - MODIFY_METADATA
            - VIEW_VERSIONS
            - CREATE_VERSION
            - VIEW_AUDIT
            - MANAGE_PERMISSIONS
            - CHECKOUT
            - CHECKIN
            - SIGN
            - SEND_FOR_SIGNATURE
            - ADMIN
        isGranted:
          type: boolean
          description: Indicates if the permission is granted or denied
        expirationDate:
          type: string
          description: Date and time when the permission expires
          format: date-time
        tenantId:
          type: string
          description: Tenant ID for multi-tenancy support
        createdAt:
          type: string
          description: Date and time when the permission was created
          format: date-time
        createdBy:
          type: string
          description: User who created the permission
        updatedAt:
          type: string
          description: Date and time when the permission was last updated
          format: date-time
        updatedBy:
          type: string
          description: User who last updated the permission
        version:
          type: integer
          description: Version number for optimistic locking
          format: int64
      description: Document permission data transfer object
    DocumentMetadataDTO:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the metadata
          format: uuid
          readOnly: true
        documentId:
          type: string
          description: ID of the document this metadata belongs to
          format: uuid
        key:
          type: string
          description: Metadata key
        value:
          type: string
          description: Metadata value
        type:
          type: string
          description: Type of the metadata value
        isSearchable:
          type: boolean
          description: Indicates if this metadata is searchable
        isSystemMetadata:
          type: boolean
          description: Indicates if this is system metadata
        tenantId:
          type: string
          description: Tenant ID for multi-tenancy support
        createdAt:
          type: string
          description: Date and time when this metadata was created
          format: date-time
        createdBy:
          type: string
          description: User who created this metadata
        updatedAt:
          type: string
          description: Date and time when this metadata was last updated
          format: date-time
        updatedBy:
          type: string
          description: User who last updated this metadata
        version:
          type: integer
          description: Version number for optimistic locking
          format: int64
      description: Document metadata data transfer object
    DocumentVersionDTO:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the document version
          format: uuid
          readOnly: true
        documentId:
          type: string
          description: ID of the document this version belongs to
          format: uuid
        versionNumber:
          type: integer
          description: Version number
          format: int32
        fileName:
          type: string
          description: File name of this version
        fileExtension:
          type: string
          description: File extension of this version
        mimeType:
          type: string
          description: MIME type of this version
        fileSize:
          type: integer
          description: Size of the file in bytes
          format: int64
        storageType:
          type: string
          description: Storage type of this version
          enum:
            - LOCAL_FILESYSTEM
            - DATABASE
            - S3
            - AZURE_BLOB
            - GOOGLE_CLOUD_STORAGE
            - CDN
            - DISTRIBUTED_FS
            - EXTERNAL_REFERENCE
        storagePath:
          type: string
          description: Path where this version is stored
        isEncrypted:
          type: boolean
          description: Indicates if this version is encrypted
        changeSummary:
          type: string
          description: Summary of changes in this version
        isMajorVersion:
          type: boolean
          description: Indicates if this is a major version
        tenantId:
          type: string
          description: Tenant ID for multi-tenancy support
        createdAt:
          type: string
          description: Date and time when this version was created
          format: date-time
        createdBy:
          type: string
          description: User who created this version
      description: Document version data transfer object
    DocumentTagDTO:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the document-tag relationship
          format: uuid
        documentId:
          type: string
          description: ID of the document
          format: uuid
        tagId:
          type: string
          description: ID of the tag
          format: uuid
        tenantId:
          type: string
          description: Tenant ID for multi-tenancy support
        createdAt:
          type: string
          description: Date and time when the relationship was created
          format: date-time
        createdBy:
          type: string
          description: User who created the relationship
      description: Document tag relationship data transfer object
    PaginationResponse:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            type: object
            description: The list of items for the current page.
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseDocumentDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/DocumentDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    DataBuffer:
      type: object
    PaginationResponseDocumentVersionDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/DocumentVersionDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseDocumentTagDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/DocumentTagDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseDocumentSignatureDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/DocumentSignatureDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseDocumentPermissionDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/DocumentPermissionDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseDocumentMetadataDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/DocumentMetadataDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
